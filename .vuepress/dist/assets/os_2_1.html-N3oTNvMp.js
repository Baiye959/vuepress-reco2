import{_ as i,o as e,c as t,e as p}from"./app-RurT4_Tw.js";const l="/image/2024022704.webp",s="/image/2024022705.webp",c="/image/2024022706.webp",o="/image/2024022707.webp",_="/image/2024022708.webp",a="/image/2024022709.webp",r={},m=p('<h2 id="图灵机的工作方式" tabindex="-1"><a class="header-anchor" href="#图灵机的工作方式" aria-hidden="true">#</a> 图灵机的工作方式</h2><p>要想知道程序执行的原理，可以从「图灵机」开始说起，图灵的基本思想是用机器来模拟人们用纸笔进行数学计算的过程，而且还定义了计算机由哪些部分组成，程序又是如何执行的。</p><p>图灵机的样子： <img src="'+l+'" alt=""></p><p>图灵机的基本组成如下：</p><ul><li>有一条「纸带」，纸带由一个个连续的格子组成，每个格子可以写入字符。纸带就好比内存，而纸带格子里的字符就好比存储的数据或程序；</li><li>有一个「读写头」，读写头可以读取任意一个格子里的字符，也可以把字符写入到纸带的格子里；</li><li>读写头上有一些部件，比如存储单元、控制单元以及运算单元：1.存储单元用于存放数据；2.控制单元用于识别字符是数据还是程序，并控制程序的流程等；3.运算单元用于执行运算指令；</li></ul><p>知道了图灵机的组成后，我们以简单数学运算的<code>1+2</code>为例，看看它是怎么执行这段代码的：</p><ul><li><p>首先，用读写头把&#39;1&#39;、&#39;2&#39;、&#39;+&#39;这三个字符写到纸带的3个格子里，然后读写头先停在&#39;1&#39;对应的格子上； <img src="'+s+'" alt=""></p></li><li><p>接着，读写头读入&#39;1&#39;到存储设备中，这个存储设备称为图灵机的状态； <img src="'+c+'" alt=""></p></li><li><p>然后，读写头向右移动一个格，用同样的方式把&#39;2&#39;读入到图灵机的状态，于是现在图灵机的状态里存储着两个连续的数字1和2； <img src="'+o+'" alt=""></p></li><li><p>读写头再往右一格就会读到&#39;+&#39;、把&#39;+&#39;传输给控制单元。控制单元发现这是一个运算符指令而不是数字，所以没有存到状态里，而是通知运算单元工作。运算单元收到要加和状态里的值的命令后，就会把状态里的1和2读入并计算，再将计算的结果3存放到状态里； <img src="'+_+'" alt=""></p></li><li><p>最后，运算单元把结果返回给控制单元，控制单元将结果传输给读写头，读写头往右一格把&#39;3&#39;写入到纸带的格子里； <img src="'+a+'" alt=""></p></li></ul><p>通过上面的图灵机计算<code>1+2</code>的过程，可以发现图灵机的主要功能就是读写头读取纸带中的内容，然后交给控制单元判断是数字还是运算符指令，如果是数字就存到状态里，如果是运算符指令就通知运算符单元读取状态中的数字进行计算，最后将结果返回给读写头，读写头把结果写入纸带的格子里。</p><p>事实上，图灵机这个简单的工作方式，跟我们今天的计算机是基本一致的。接下来我们再看看今天的计算机的组成以及工作方式。</p>',9),n=[m];function d(g,h){return e(),t("div",null,n)}const f=i(r,[["render",d],["__file","os_2_1.html.vue"]]);export{f as default};
