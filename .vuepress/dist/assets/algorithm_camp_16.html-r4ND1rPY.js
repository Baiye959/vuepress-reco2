import{_ as s,r as a,o as h,c as i,a as e,d as o,w as n,b as t,e as c}from"./app-F4VrIjUt.js";const d={},_={class:"custom-container info"},m=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),p=e("p",{class:"custom-container-title"},"交作业",-1),u=e("br",null,null,-1),E=e("br",null,null,-1),f=e("br",null,null,-1),g=c('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>104.二叉树的最大深度</li><li>559.n叉树的最大深度</li><li>111.二叉树的最小深度</li><li>222.完全二叉树的节点个数</li></ul><h2 id="详细布置" tabindex="-1"><a class="header-anchor" href="#详细布置" aria-hidden="true">#</a> 详细布置</h2><p>迭代法，大家可以直接过，二刷有精力的时候 再去掌握迭代法。</p><h3 id="_104-二叉树的最大深度-优先掌握递归" tabindex="-1"><a class="header-anchor" href="#_104-二叉树的最大深度-优先掌握递归" aria-hidden="true">#</a> 104.二叉树的最大深度（优先掌握递归）</h3><p>什么是深度，什么是高度，如何求深度，如何求高度，这里有关系到二叉树的遍历方式。</p><p>大家 要先看视频讲解，就知道以上我说的内容了，很多录友刷过这道题，但理解的还不够。</p>',7),A={href:"https://programmercarl.com/0104.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},x=e("h3",{id:"_111-二叉树的最小深度-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_111-二叉树的最小深度-优先掌握递归","aria-hidden":"true"},"#"),t(" 111.二叉树的最小深度（优先掌握递归）")],-1),B=e("p",null,"先看视频讲解，和最大深度 看似差不多，其实 差距还挺大，有坑。",-1),b={href:"https://programmercarl.com/0111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"_222-完全二叉树的节点个数-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_222-完全二叉树的节点个数-优先掌握递归","aria-hidden":"true"},"#"),t(" 222.完全二叉树的节点个数（优先掌握递归）")],-1),w=e("p",null,"需要了解，普通二叉树 怎么求，完全二叉树又怎么求",-1),C={href:"https://programmercarl.com/0222.%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"};function v(F,L){const r=a("RouterLink"),l=a("ExternalLinkIcon");return h(),i("div",null,[e("div",_,[m,p,e("p",null,[o(r,{to:"/blogs/algorithm/leetcode104.html"},{default:n(()=>[t("104.二叉树的最大深度")]),_:1}),u,o(r,{to:"/blogs/algorithm/leetcode559.html"},{default:n(()=>[t("559.n叉树的最大深度")]),_:1}),E,o(r,{to:"/blogs/algorithm/leetcode111.html"},{default:n(()=>[t("111.二叉树的最小深度")]),_:1}),f,o(r,{to:"/blogs/algorithm/leetcode222.html"},{default:n(()=>[t("222.完全二叉树的节点个数")]),_:1})])]),g,e("p",null,[e("a",A,[t("题目链接/文章讲解/视频讲解"),o(l)])]),x,B,e("p",null,[e("a",b,[t("题目链接/文章讲解/视频讲解"),o(l)])]),k,w,e("p",null,[e("a",C,[t("题目链接/文章讲解/视频讲解"),o(l)])])])}const V=s(d,[["render",v],["__file","algorithm_camp_16.html.vue"]]);export{V as default};
