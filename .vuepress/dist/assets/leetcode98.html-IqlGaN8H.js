const e=JSON.parse('{"key":"v-0f89766e","path":"/blogs/algorithm/leetcode98.html","title":"LeetCode-98-验证二叉搜索树 | 二叉树31","lang":"en-US","frontmatter":{"title":"LeetCode-98-验证二叉搜索树 | 二叉树31","date":"2024/03/23","categories":["算法"]},"headers":[{"level":2,"title":"98. 验证二叉搜索树","slug":"_98-验证二叉搜索树","link":"#_98-验证二叉搜索树","children":[]},{"level":2,"title":"Java基础补充","slug":"java基础补充","link":"#java基础补充","children":[]},{"level":2,"title":"解题思路","slug":"解题思路","link":"#解题思路","children":[{"level":3,"title":"解法一（递归 不利用特性直接判断）","slug":"解法一-递归-不利用特性直接判断","link":"#解法一-递归-不利用特性直接判断","children":[]},{"level":3,"title":"解法二（递归 利用特性直接判断）","slug":"解法二-递归-利用特性直接判断","link":"#解法二-递归-利用特性直接判断","children":[]},{"level":3,"title":"解法三（递归 转换为序列判断）","slug":"解法三-递归-转换为序列判断","link":"#解法三-递归-转换为序列判断","children":[]}]}],"git":{"createdTime":1711204766000,"updatedTime":1711204766000,"contributors":[{"name":"baiye959","email":"3383522774@qq.com","commits":1}]},"filePathRelative":"blogs/algorithm/leetcode98.md"}');export{e as data};
