import{_ as l,o as t,c as n,e as i,a,b as e}from"./app-jiLvWxPd.js";const s={},o=i('<h2 id="构造方法" tabindex="-1"><a class="header-anchor" href="#构造方法" aria-hidden="true">#</a> 构造方法</h2><ol><li>构造方法的作用？ 创造对象的时候，由虚拟机自动调用，给成员变量进行初始化的。</li><li>构造方法有几种，各自的作用是什么？ <ul><li>无参数构造方法：初始化的对象时，成员变量的数据均采用默认值。</li><li>有参数构造方法：在初始化对象的时候，同时可以为对象进行赋值。</li></ul></li><li>构造方法有哪些注意事项？ <ul><li>任何类定义出来，默认就自带了无参数构造器，写不写都有。</li><li>一旦定义了有参数构造器，无参数构造器就没有了，此时就需要自己写无参数构造器了。</li><li>建议在任何时候都手动写上空参和带全部参数的构造方法</li></ul></li></ol><h2 id="标准的javabean类" tabindex="-1"><a class="header-anchor" href="#标准的javabean类" aria-hidden="true">#</a> 标准的JavaBean类</h2><ol><li>类名需要见名知意</li><li>成员变量使用<code>private</code>修饰</li><li>提供至少两个构造方法 <ul><li>无参构造方法</li><li>带全部参数的构造方法</li></ul></li><li>成员方法 <ul><li>提供每一个成员变量对应的setXxx()/getXxx()</li><li>如果还有其他行为，也需要写上</li></ul></li></ol>',4),r=a("div",{class:"custom-container tip"},[a("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[a("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[a("circle",{cx:"12",cy:"12",r:"9"}),a("path",{d:"M12 8h.01"}),a("path",{d:"M11 12h1v4h1"})])]),a("p",{class:"custom-container-title"},"快速生成JavaBean类"),a("p",null,[e("IDEA快捷键 "),a("code",null,"alt+insert+fn"),e(' - "Constructor"+"Getter and Setter"'),a("br"),e(" 或"),a("br"),e(' 插件PTG，右键点击"Ptg To JavaBean"')])],-1),c=i(`<h2 id="this的本质" tabindex="-1"><a class="header-anchor" href="#this的本质" aria-hidden="true">#</a> this的本质</h2><p>this的本质：代表方法调用者的地址值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="垃圾回收机制" tabindex="-1"><a class="header-anchor" href="#垃圾回收机制" aria-hidden="true">#</a> 垃圾回收机制</h2><p>当一个对象在主程序里使用完后，就会自动被java从堆中删除</p>`,5),d=[o,r,c];function h(u,p){return t(),n("div",null,d)}const _=l(s,[["render",h],["__file","object_basic.html.vue"]]);export{_ as default};
