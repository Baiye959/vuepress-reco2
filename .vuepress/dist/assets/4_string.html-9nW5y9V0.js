import{_ as s,r as a,o as r,c as i,a as l,d as e,w as n,b as t}from"./app-w9nbNKFY.js";const h={},d={class:"custom-container tip"},_=l("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[l("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[l("circle",{cx:"12",cy:"12",r:"9"}),l("path",{d:"M12 8h.01"}),l("path",{d:"M11 12h1v4h1"})])],-1),c=l("p",{class:"custom-container-title"},"TIP",-1),u=l("p",null,[l("b",null,"字符串类类型的题目，往往想法比较简单，但实现起来不容易，主要考点是双指针和KMP算法。")],-1),m=l("br",null,null,-1),g=l("br",null,null,-1),b=l("br",null,null,-1),f=l("br",null,null,-1),p=l("br",null,null,-1),k=l("br",null,null,-1),x=l("h2",{id:"要不要使用库函数",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#要不要使用库函数","aria-hidden":"true"},"#"),t(" 要不要使用库函数")],-1),w=l("p",null,"打基础的时候，不要太迷恋库函数，尤其是不理解库函数底层实现时，很难分析算法的时间复杂度。",-1),v=l("p",null,[t("如果题目关键的部分直接用库函数就可以解决，不要使用库函数。"),l("br"),t(" 如果库函数仅仅是解题过程中的一小部分，并且已经很清楚这个库函数的内部实现原理的话，可以考虑使用库函数。")],-1),I=l("h2",{id:"双指针法",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#双指针法","aria-hidden":"true"},"#"),t(" 双指针法")],-1),M=l("p",null,"题目举例：",-1),B=l("h2",{id:"kmp",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#kmp","aria-hidden":"true"},"#"),t(" KMP")],-1),P=l("p",null,[l("strong",null,"当出现字符串不匹配时，可以知道一部分之前已经匹配的文本内容，利用这些信息避免从头再去做匹配。")],-1),C=l("p",null,"使用KMP可以解决两类经典问题：",-1);function K(N,V){const o=a("RouterLink");return r(),i("div",null,[l("div",d,[_,c,u,l("p",null,[e(o,{to:"/blogs/algorithm/leetcode344.html"},{default:n(()=>[t("344.反转字符串")]),_:1}),m,e(o,{to:"/blogs/algorithm/leetcode541.html"},{default:n(()=>[t("541.反转字符串II")]),_:1}),g,e(o,{to:"/blogs/algorithm/kama54.html"},{default:n(()=>[t("卡码网：54.替换数字")]),_:1}),b,e(o,{to:"/blogs/algorithm/leetcode151.html"},{default:n(()=>[t("151.翻转字符串里的单词")]),_:1}),f,e(o,{to:"/blogs/algorithm/kama55.html"},{default:n(()=>[t("卡码网：55.右旋转字符串")]),_:1}),p,e(o,{to:"/blogs/algorithm/leetcode28.html"},{default:n(()=>[t("28.实现strStr()")]),_:1}),k,e(o,{to:"/blogs/algorithm/leetcode459.html"},{default:n(()=>[t("459.重复的子字符串")]),_:1})])]),x,w,v,I,M,l("ul",null,[l("li",null,[e(o,{to:"/blogs/algorithm/leetcode344.html"},{default:n(()=>[t("344.反转字符串")]),_:1})]),l("li",null,[e(o,{to:"/blogs/algorithm/leetcode541.html"},{default:n(()=>[t("541.反转字符串II")]),_:1})]),l("li",null,[e(o,{to:"/blogs/algorithm/kama54.html"},{default:n(()=>[t("卡码网：54.替换数字")]),_:1})]),l("li",null,[e(o,{to:"/blogs/algorithm/leetcode151.html"},{default:n(()=>[t("151.翻转字符串里的单词")]),_:1})]),l("li",null,[e(o,{to:"/blogs/algorithm/kama55.html"},{default:n(()=>[t("卡码网：55.右旋转字符串")]),_:1})])]),B,P,C,l("ul",null,[l("li",null,[t("匹配问题："),e(o,{to:"/blogs/algorithm/leetcode28.html"},{default:n(()=>[t("28.实现strStr()")]),_:1})]),l("li",null,[t("重复子串问题："),e(o,{to:"/blogs/algorithm/leetcode459.html"},{default:n(()=>[t("459.重复的子字符串")]),_:1})])])])}const R=s(h,[["render",K],["__file","4_string.html.vue"]]);export{R as default};
