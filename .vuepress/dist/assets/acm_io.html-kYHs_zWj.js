import{_ as p,r as e,o,c,a as n,b as s,d as t,e as l}from"./app-5vv6scfr.js";const i={},u={class:"custom-container info"},k=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])],-1),r=n("p",{class:"custom-container-title"},"INFO",-1),d=n("br",null,null,-1),b={href:"https://kamacoder.com/",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),v={href:"https://pan.baidu.com/s/1R35L0C5nRzM4ykhFJr_B6w?pwd=rpuo",target:"_blank",rel:"noopener noreferrer"},h=l(`<details class="custom-container details"><summary class="custom-container-title">第1题——A+B问题I</summary><h2 id="_1-a-b问题i" tabindex="-1"><a class="header-anchor" href="#_1-a-b问题i" aria-hidden="true">#</a> 1. A+B问题I</h2><h3 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h3><p>时间限制：2.000S 空间限制：32MB</p><p>题目描述</p><blockquote><p>你的任务是计算a+b。</p></blockquote><p>输入描述</p><blockquote><p>输入包含一系列的a和b对，通过空格隔开。一对a和b占一行。</p></blockquote><p>输出描述</p><blockquote><p>对于输入的每对a和b，你需要依次输出a、b的和。</p><p>如对于输入中的第二对a和b，在输出中它们的和应该也在第二行。</p></blockquote><p>输入示例</p><blockquote><p>3 4 <br> 11 40</p></blockquote><p>输出示例</p><blockquote><p>7 <br> 51</p></blockquote><h3 id="解题" tabindex="-1"><a class="header-anchor" href="#解题" aria-hidden="true">#</a> 解题</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span> in<span class="token punctuation">.</span><span class="token function">hasNextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> b <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary class="custom-container-title">第2题——A+B问题II</summary><ol start="2"><li>A+B问题II 时间限制：1.000S 空间限制：32MB</li></ol><p>题目描述</p><blockquote><p>计算a+b，但输入方式有所改变。</p></blockquote><p>输入描述</p><blockquote><p>第一行是一个整数N，表示后面会有N行a和b，通过空格隔开。</p></blockquote><p>输出描述</p><blockquote><p>对于输入的每对a和b，你需要在相应的行输出a、b的和。</p><p>如第二对a和b，对应的和也输出在第二行。</p></blockquote><p>输入示例</p><blockquote><p>2 <br> 2 4 <br> 9 21</p></blockquote><p>输出示例</p><blockquote><p>6 <br> 30</p></blockquote><p>提示信息</p><blockquote><p>注意，测试数据不仅仅一组。也就是说，会持续输入N以及后面的a和b</p></blockquote><h3 id="解题-1" tabindex="-1"><a class="header-anchor" href="#解题-1" aria-hidden="true">#</a> 解题</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> n <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> a <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> b <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,2);function w(_,y){const a=e("ExternalLinkIcon");return o(),c("div",null,[n("div",u,[k,r,n("p",null,[s("笔试面试的时候是ACM模式，熟悉一下输入输出方式"),d,n("a",b,[s("练习题OJ网址"),t(a)]),m,n("a",v,[s("参考模板写法（百度网盘下载地址）"),t(a)])])]),h])}const x=p(i,[["render",w],["__file","acm_io.html.vue"]]);export{x as default};
