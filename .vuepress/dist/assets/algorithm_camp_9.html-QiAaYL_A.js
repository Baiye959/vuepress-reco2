import{_ as s,r as a,o as i,c as h,a as t,d as r,w as l,b as e,e as c}from"./app-_5Rv1Wsf.js";const d={},_={class:"custom-container info"},p=t("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[t("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[t("circle",{cx:"12",cy:"12",r:"9"}),t("path",{d:"M12 8h.01"}),t("path",{d:"M11 12h1v4h1"})])],-1),m=t("p",{class:"custom-container-title"},"交作业",-1),u=t("br",null,null,-1),g={class:"custom-container warning"},f=t("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[t("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[t("circle",{cx:"12",cy:"12",r:"9"}),t("path",{d:"M12 8v4"}),t("path",{d:"M12 16h.01"})])],-1),x=t("p",{class:"custom-container-title"},"待完成",-1),E=c('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>28.实现strStr()</li><li>459.重复的子字符串</li><li>字符串总结</li><li>双指针回顾</li></ul><h2 id="详细布置" tabindex="-1"><a class="header-anchor" href="#详细布置" aria-hidden="true">#</a> 详细布置</h2><h3 id="_28-实现strstr-本题可以跳过" tabindex="-1"><a class="header-anchor" href="#_28-实现strstr-本题可以跳过" aria-hidden="true">#</a> 28.实现strStr()（本题可以跳过）</h3><p>因为KMP算法很难，大家别奢求一次就把kmp全理解了，大家刚学KMP一定会有各种各样的疑问，先留着，别期望立刻啃明白，第一遍了解大概思路，二刷的时候再看KMP会好懂很多。</p><p>或者说大家可以放弃一刷可以不看KMP，今天来回顾一下之前的算法题目就可以。</p><p>因为大家算法能力还没到细抠很难的算法，会把自己绕进去，就算别人给解释，只会激发出更多的问题和疑惑。所以大家先了解大体过程，知道这么回事，等自己有算法基础和思维了，在看多看几遍视频，慢慢就理解了。</p>',7),w={href:"https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html",target:"_blank",rel:"noopener noreferrer"},k=t("h3",{id:"_459-重复的子字符串-本题可以跳过",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_459-重复的子字符串-本题可以跳过","aria-hidden":"true"},"#"),e(" 459.重复的子字符串（本题可以跳过）")],-1),B=t("p",null,[e("本题算是KMP算法的一个应用，不过对KMP了解不够熟练的话，理解本题就难很多。"),t("br"),e(" 我的建议是"),t("strong",null,"KMP和本题，一刷的时候可以适当放过，了解怎么回事就行，二刷的时候再来硬啃")],-1),b={href:"https://programmercarl.com/0459.%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html",target:"_blank",rel:"noopener noreferrer"},v=t("h3",{id:"字符串总结",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串总结","aria-hidden":"true"},"#"),e(" 字符串总结")],-1),M=t("p",null,"比较简单，大家读一遍就行",-1),A={href:"https://programmercarl.com/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E7%BB%93.html",target:"_blank",rel:"noopener noreferrer"},C=t("h3",{id:"双指针回顾",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#双指针回顾","aria-hidden":"true"},"#"),e(" 双指针回顾")],-1),K=t("p",null,"此时我们已经做过10道双指针的题目了，来一起回顾一下，大家自己也总结一下双指针的心得",-1),P={href:"https://programmercarl.com/%E5%8F%8C%E6%8C%87%E9%92%88%E6%80%BB%E7%BB%93.html",target:"_blank",rel:"noopener noreferrer"};function D(S,L){const o=a("RouterLink"),n=a("ExternalLinkIcon");return i(),h("div",null,[t("div",_,[p,m,t("p",null,[r(o,{to:"/blogs/algorithm/string.html"},{default:l(()=>[e("字符串总结")]),_:1}),u,r(o,{to:"/blogs/algorithm/5_two_pointer.html"},{default:l(()=>[e("双指针回顾")]),_:1})])]),t("div",g,[f,x,t("ul",null,[t("li",null,[r(o,{to:"/blogs/algorithm/leetcode28.html"},{default:l(()=>[e("28.实现strStr()")]),_:1})]),t("li",null,[r(o,{to:"/blogs/algorithm/leetcode459.html"},{default:l(()=>[e("459.重复的子字符串")]),_:1})])])]),E,t("p",null,[t("a",w,[e("题目链接/文章讲解/视频讲解"),r(n)])]),k,B,t("p",null,[t("a",b,[e("题目链接/文章讲解/视频讲解"),r(n)])]),v,M,t("p",null,[t("a",A,[e("题目链接/文章讲解"),r(n)])]),C,K,t("p",null,[t("a",P,[e("文章讲解"),r(n)])])])}const V=s(d,[["render",D],["__file","algorithm_camp_9.html.vue"]]);export{V as default};
