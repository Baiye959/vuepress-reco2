import{_ as s,r as a,o as h,c as i,a as e,b as o,w as l,d as t,e as c}from"./app-mhGap3UT.js";const _={},d={class:"custom-container info"},m=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),p=e("p",{class:"custom-container-title"},"交作业",-1),u=e("br",null,null,-1),E=e("br",null,null,-1),f=e("br",null,null,-1),g=c('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>哈希表理论基础</li><li>242.有效的字母异位词</li><li>349.两个数组的交集</li><li>202.快乐数</li><li>1.两数之和</li></ul><h2 id="哈希表理论基础" tabindex="-1"><a class="header-anchor" href="#哈希表理论基础" aria-hidden="true">#</a> 哈希表理论基础</h2><p>建议：大家要了解哈希表的内部实现原理，哈希函数，哈希碰撞，以及常见哈希表的区别，数组，set 和map。</p><p>什么时候想到用哈希法？**当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法。**这句话很重要，大家在做哈希表题目都要思考这句话。</p>',5),B={href:"https://programmercarl.com/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"_242-有效的字母异位词",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_242-有效的字母异位词","aria-hidden":"true"},"#"),t(" 242.有效的字母异位词")],-1),x=e("p",null,"建议： 这道题目，大家可以感受到 数组 用来做哈希表 给我们带来的遍历之处。",-1),A={href:"https://programmercarl.com/0242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D.html",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"_349-两个数组的交集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_349-两个数组的交集","aria-hidden":"true"},"#"),t(" 349. 两个数组的交集")],-1),w=e("p",null,"建议：本题就开始考虑 什么时候用set 什么时候用数组，本题其实是使用set的好题，但是后来力扣改了题目描述和 测试用例，添加了 0 <= nums1[i], nums2[i] <= 1000 条件，所以使用数组也可以了，不过建议大家忽略这个条件。 尝试去使用set。",-1),v={href:"https://programmercarl.com/0349.%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86.html",target:"_blank",rel:"noopener noreferrer"},C=e("h2",{id:"_202-快乐数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_202-快乐数","aria-hidden":"true"},"#"),t(" 202. 快乐数")],-1),D=e("p",null,"建议：这道题目也是set的应用，其实和上一题差不多，就是 套在快乐数一个壳子",-1),F={href:"https://programmercarl.com/0202.%E5%BF%AB%E4%B9%90%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},L=e("h2",{id:"_1-两数之和",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-两数之和","aria-hidden":"true"},"#"),t(" 1. 两数之和")],-1),N=e("p",null,"建议：本题虽然是 力扣第一题，但是还是挺难的，也是 代码随想录中 数组，set之后，使用map解决哈希问题的第一题。",-1),V=e("p",null,"建议大家先看视频讲解，然后尝试自己写代码，在看文章讲解，加深印象。",-1),I={href:"https://programmercarl.com/0001.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"};function M(R,j){const n=a("RouterLink"),r=a("ExternalLinkIcon");return h(),i("div",null,[e("div",d,[m,p,e("p",null,[o(n,{to:"/blogs/algorithm/leetcode242.html"},{default:l(()=>[t("242.有效的字母异位词")]),_:1}),u,o(n,{to:"/blogs/algorithm/leetcode349.html"},{default:l(()=>[t("349.两个数组的交集")]),_:1}),E,o(n,{to:"/blogs/algorithm/leetcode202.html"},{default:l(()=>[t("202.快乐数")]),_:1}),f,o(n,{to:"/blogs/algorithm/leetcode1.html"},{default:l(()=>[t("1.两数之和")]),_:1})])]),g,e("p",null,[e("a",B,[t("文章讲解"),o(r)])]),b,x,e("p",null,[e("a",A,[t("题目链接/文章讲解/视频讲解"),o(r)])]),k,w,e("p",null,[e("a",v,[t("题目链接/文章讲解/视频讲解"),o(r)])]),C,D,e("p",null,[e("a",F,[t("题目链接/文章讲解"),o(r)])]),L,N,V,e("p",null,[e("a",I,[t("题目链接/文章讲解/视频讲解"),o(r)])])])}const S=s(_,[["render",M],["__file","algorithm_camp_6.html.vue"]]);export{S as default};
