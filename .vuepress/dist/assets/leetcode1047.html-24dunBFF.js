import{_ as d,r as o,o as s,c as i,a as e,b as a,d as l,w as n,e as c}from"./app-mBtrDmkd.js";const r={},u=c(`<h2 id="_1047-删除字符串中的所有相邻重复项" tabindex="-1"><a class="header-anchor" href="#_1047-删除字符串中的所有相邻重复项" aria-hidden="true">#</a> 1047. 删除字符串中的所有相邻重复项</h2><p>给出由小写字母组成的字符串 <code>S</code>，<strong>重复项删除操作</strong>会选择两个相邻且相同的字母，并删除它们。</p><p>在 <code>S</code> 上反复执行重复项删除操作，直到无法继续删除。</p><p>在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。</p><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：&quot;abbaca&quot;
输出：&quot;ca&quot;
解释：
例如，在 &quot;abbaca&quot; 中，我们可以删除 &quot;bb&quot; 由于两字母相邻且相同，这是此时唯一可以执行删除操作的重复项。之后我们得到字符串 &quot;aaca&quot;，其中又只有 &quot;aa&quot; 可以执行重复项删除操作，所以最后的字符串为 &quot;ca&quot;。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1 &lt;= S.length &lt;= 20000
S 仅由小写英文字母组成。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2>`,9),h=e("br",null,null,-1),m=e("br",null,null,-1),v=e("div",{class:"language-java line-numbers-mode","data-ext":"java"},[e("pre",{class:"language-java"},[e("code",null,`
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1);function b(_,p){const t=o("RouterLink");return s(),i("div",null,[u,e("p",null,[a("跟上一题"),l(t,{to:"/blogs/algorithm/leetcode20.html"},{default:n(()=>[a("20.有效的括号")]),_:1}),a("很像，都是消除匹配元素。"),h,a(" 本题是对字符串操作，为了避免多余的字符串处理，直接在字符串上模拟栈。"),m,a(" 这里在字符串上模拟栈，不可避免要做删除操作，可以用双指针法优化效率，参考题目：")]),e("ul",null,[e("li",null,[l(t,{to:"/blogs/algorithm/leetcode27.html"},{default:n(()=>[a("27.移除元素")]),_:1})]),e("li",null,[l(t,{to:"/blogs/algorithm/leetcode151.html"},{default:n(()=>[a("151.翻转字符串里的单词")]),_:1}),a("：数组/字符串删除类问题，一指针指向不保留元素、一指针指向保留元素，保留元素赋值给不保留位")])]),v])}const x=d(r,[["render",b],["__file","leetcode1047.html.vue"]]);export{x as default};
