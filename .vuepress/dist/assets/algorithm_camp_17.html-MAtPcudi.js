import{_ as a,r as s,o as c,c as _,a as e,b as o,w as l,d as t}from"./app-sZn_pEP8.js";const h={},i={class:"custom-container info"},d=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),u=e("p",{class:"custom-container-title"},"交作业",-1),m=e("br",null,null,-1),p=e("br",null,null,-1),f=e("h2",{id:"今日任务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#今日任务","aria-hidden":"true"},"#"),t(" 今日任务")],-1),E=e("ul",null,[e("li",null,"110.平衡二叉树"),e("li",null,"257.二叉树的所有路径"),e("li",null,"404.左叶子之和")],-1),g=e("p",null,"迭代法，大家可以直接过，二刷有精力的时候 再去掌握迭代法。",-1),x=e("h2",{id:"_110-平衡二叉树-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_110-平衡二叉树-优先掌握递归","aria-hidden":"true"},"#"),t(" 110.平衡二叉树（优先掌握递归）")],-1),k=e("p",null,"再一次涉及到，什么是高度，什么是深度，可以巩固一下。",-1),B={href:"https://programmercarl.com/0110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"_257-二叉树的所有路径-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_257-二叉树的所有路径-优先掌握递归","aria-hidden":"true"},"#"),t(" 257.二叉树的所有路径（优先掌握递归）")],-1),w=e("p",null,"这是大家第一次接触到回溯的过程， 我在视频里重点讲解了 本题为什么要有回溯，已经回溯的过程。",-1),A=e("p",null,"如果对回溯 似懂非懂，没关系， 可以先有个印象。",-1),v={href:"https://programmercarl.com/0257.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84.html",target:"_blank",rel:"noopener noreferrer"},C=e("h2",{id:"_404-左叶子之和-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_404-左叶子之和-优先掌握递归","aria-hidden":"true"},"#"),t(" 404.左叶子之和（优先掌握递归）")],-1),F=e("p",null,"其实本题有点文字游戏，搞清楚什么是左叶子，剩下的就是二叉树的基本操作。",-1),L={href:"https://programmercarl.com/0404.%E5%B7%A6%E5%8F%B6%E5%AD%90%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"};function N(V,I){const n=s("RouterLink"),r=s("ExternalLinkIcon");return c(),_("div",null,[e("div",i,[d,u,e("p",null,[o(n,{to:"/blogs/algorithm/leetcode110.html"},{default:l(()=>[t("110.平衡二叉树")]),_:1}),m,o(n,{to:"/blogs/algorithm/leetcode257.html"},{default:l(()=>[t("257.二叉树的所有路径")]),_:1}),p,o(n,{to:"/blogs/algorithm/leetcode404.html"},{default:l(()=>[t("404.左叶子之和")]),_:1})])]),f,E,g,x,k,e("p",null,[e("a",B,[t("题目链接/文章讲解/视频讲解"),o(r)])]),b,w,A,e("p",null,[e("a",v,[t("题目链接/文章讲解/视频讲解"),o(r)])]),C,F,e("p",null,[e("a",L,[t("题目链接/文章讲解/视频讲解"),o(r)])])])}const R=a(h,[["render",N],["__file","algorithm_camp_17.html.vue"]]);export{R as default};
