import{_ as s,r as l,o as c,c as h,a as e,d as o,w as a,b as t,e as i}from"./app-SEWKj_z3.js";const d={},_={class:"custom-container info"},m=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),p=e("p",{class:"custom-container-title"},"交作业",-1),u=e("br",null,null,-1),E=e("br",null,null,-1),f=i('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>20.有效的括号</li><li>1047.删除字符串中的所有相邻重复项</li><li>150.逆波兰表达式求值</li></ul><h2 id="详细布置" tabindex="-1"><a class="header-anchor" href="#详细布置" aria-hidden="true">#</a> 详细布置</h2><h3 id="_20-有效的括号" tabindex="-1"><a class="header-anchor" href="#_20-有效的括号" aria-hidden="true">#</a> 20. 有效的括号</h3><p>讲完了栈实现队列，队列实现栈，接下来就是栈的经典应用了。</p><p>大家先自己思考一下 有哪些不匹配的场景，再看视频 我讲的都有哪些场景，落实到代码其实就容易很多了。</p>',6),B={href:"https://programmercarl.com/0020.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.html",target:"_blank",rel:"noopener noreferrer"},g=e("h3",{id:"_1047-删除字符串中的所有相邻重复项",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1047-删除字符串中的所有相邻重复项","aria-hidden":"true"},"#"),t(" 1047. 删除字符串中的所有相邻重复项")],-1),x=e("p",null,"栈的经典应用。",-1),k=e("p",null,"要知道栈为什么适合做这种类似于爱消除的操作，因为栈帮助我们记录了 遍历数组当前元素时候，前一个元素是什么。",-1),b={href:"https://programmercarl.com/1047.%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9.html",target:"_blank",rel:"noopener noreferrer"},A=e("h3",{id:"_150-逆波兰表达式求值",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_150-逆波兰表达式求值","aria-hidden":"true"},"#"),t(" 150.逆波兰表达式求值")],-1),w=e("p",null,"本题不难，但第一次做的话，会很难想到，所以先看视频，了解思路再去做题",-1),C={href:"https://programmercarl.com/0150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.html",target:"_blank",rel:"noopener noreferrer"};function v(D,L){const r=l("RouterLink"),n=l("ExternalLinkIcon");return c(),h("div",null,[e("div",_,[m,p,e("p",null,[o(r,{to:"/blogs/algorithm/leetcode20.html"},{default:a(()=>[t("20.有效的括号")]),_:1}),u,o(r,{to:"/blogs/algorithm/leetcode1047.html"},{default:a(()=>[t("1047.删除字符串中的所有相邻重复项")]),_:1}),E,o(r,{to:"/blogs/algorithm/leetcode150.html"},{default:a(()=>[t("150.逆波兰表达式求值")]),_:1})])]),f,e("p",null,[e("a",B,[t("题目链接/文章讲解/视频讲解"),o(n)])]),g,x,k,e("p",null,[e("a",b,[t("题目链接/文章讲解/视频讲解"),o(n)])]),A,w,e("p",null,[e("a",C,[t("题目链接/文章讲解/视频讲解"),o(n)])])])}const V=s(d,[["render",v],["__file","algorithm_camp_11.html.vue"]]);export{V as default};
