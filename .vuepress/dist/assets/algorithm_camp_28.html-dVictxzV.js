import{_ as n,r as l,o,c as i,a as e,b as r,d as t,e as h}from"./app-nuDPY7Jg.js";const s={},c=h('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>93.复原IP地址</li><li>78.子集</li><li>90.子集II</li></ul><h2 id="详细布置" tabindex="-1"><a class="header-anchor" href="#详细布置" aria-hidden="true">#</a> 详细布置</h2><h3 id="_93-复原ip地址" tabindex="-1"><a class="header-anchor" href="#_93-复原ip地址" aria-hidden="true">#</a> 93.复原IP地址</h3><p>本期本来是很有难度的，不过 大家做完 分割回文串 之后，本题就容易很多了</p>',5),_={href:"https://programmercarl.com/0093.%E5%A4%8D%E5%8E%9FIP%E5%9C%B0%E5%9D%80.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.bilibili.com/video/BV1XP4y1U73i/",target:"_blank",rel:"noopener noreferrer"},p=e("h3",{id:"_78-子集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_78-子集","aria-hidden":"true"},"#"),r(" 78.子集")],-1),m=e("p",null,"子集问题，就是收集树形结构中，每一个节点的结果。 整体代码其实和 回溯模板都是差不多的。",-1),u={href:"https://programmercarl.com/0078.%E5%AD%90%E9%9B%86.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.bilibili.com/video/BV1U84y1q7Ci",target:"_blank",rel:"noopener noreferrer"},b=e("h3",{id:"_90-子集ii",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_90-子集ii","aria-hidden":"true"},"#"),r(" 90.子集II")],-1),I=e("p",null,"大家之前做了 40.组合总和II 和 78.子集 ，本题就是这两道题目的结合，建议自己独立做一做，本题涉及的知识，之前都讲过，没有新内容。",-1),E={href:"https://programmercarl.com/0090.%E5%AD%90%E9%9B%86II.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.bilibili.com/video/BV1vm4y1F71J",target:"_blank",rel:"noopener noreferrer"};function x(k,w){const a=l("ExternalLinkIcon");return o(),i("div",null,[c,e("ul",null,[e("li",null,[e("a",_,[r("题目链接/文章讲解"),t(a)])]),e("li",null,[e("a",d,[r("视频讲解"),t(a)])])]),p,m,e("ul",null,[e("li",null,[e("a",u,[r("题目链接/文章讲解"),t(a)])]),e("li",null,[e("a",f,[r("视频讲解"),t(a)])])]),b,I,e("ul",null,[e("li",null,[e("a",E,[r("题目链接/文章讲解"),t(a)])]),e("li",null,[e("a",g,[r("视频讲解"),t(a)])])])])}const v=n(s,[["render",x],["__file","algorithm_camp_28.html.vue"]]);export{v as default};
