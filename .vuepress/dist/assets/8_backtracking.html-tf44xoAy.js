import{_ as s,r as d,o as a,c as h,a as l,d as o,w as n,b as t}from"./app-OzwhGvB3.js";const i={},u={class:"custom-container tip"},r=l("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[l("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[l("circle",{cx:"12",cy:"12",r:"9"}),l("path",{d:"M12 8h.01"}),l("path",{d:"M11 12h1v4h1"})])],-1),_=l("p",{class:"custom-container-title"},"TIP",-1),c=l("p",null,[l("strong",null,"回溯是递归的副产品，只要有递归就会有回溯。for循环横向遍历，递归纵向遍历，回溯不断调整结果集")],-1),m=l("br",null,null,-1),g=l("br",null,null,-1),b=l("br",null,null,-1),f=l("br",null,null,-1),I=l("br",null,null,-1),p=l("br",null,null,-1),x=l("br",null,null,-1),k=l("br",null,null,-1),w=l("br",null,null,-1),N=l("br",null,null,-1),v=l("br",null,null,-1),B=l("br",null,null,-1),C=l("br",null,null,-1),P=l("br",null,null,-1),V=l("h2",{id:"组合问题-n个数里面按一定规则找出k个数的集合",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#组合问题-n个数里面按一定规则找出k个数的集合","aria-hidden":"true"},"#"),t(" 组合问题：N个数里面按一定规则找出k个数的集合")],-1),L=l("p",null,"题目举例：",-1),M=l("h2",{id:"排列问题-n个数按一定规则全排列-有几种排列方式",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#排列问题-n个数按一定规则全排列-有几种排列方式","aria-hidden":"true"},"#"),t(" 排列问题：N个数按一定规则全排列，有几种排列方式")],-1),R=l("p",null,"排列问题的不同：",-1),T=l("ul",null,[l("li",null,"每层都是从0开始搜索而不是startIndex"),l("li",null,"需要used数组记录path里放了哪些元素")],-1),j=l("p",null,"题目举例：",-1),y=l("h2",{id:"切割问题-一个字符串按一定规则有几种切割方式",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#切割问题-一个字符串按一定规则有几种切割方式","aria-hidden":"true"},"#"),t(" 切割问题：一个字符串按一定规则有几种切割方式")],-1),E=l("p",null,[t("使用"),l("code",null,"startIndex"),t("，标记上次切割的位置为"),l("code",null,"startIndex-1")],-1),q=l("p",null,"题目举例：",-1),z=l("h2",{id:"子集问题-一个n个数的集合里有多少符合条件的子集",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#子集问题-一个n个数的集合里有多少符合条件的子集","aria-hidden":"true"},"#"),t(" 子集问题：一个N个数的集合里有多少符合条件的子集")],-1),A=l("p",null,"可以使用set针对同一父节点本层去重，但子集问题一定要排序。",-1),D=l("p",null,"题目举例",-1),F=l("h2",{id:"棋盘问题-n皇后-解数独等等",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#棋盘问题-n皇后-解数独等等","aria-hidden":"true"},"#"),t(" 棋盘问题：N皇后，解数独等等")],-1),G=l("h2",{id:"图论扩展",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#图论扩展","aria-hidden":"true"},"#"),t(" 图论扩展")],-1);function H(J,K){const e=d("RouterLink");return a(),h("div",null,[l("div",u,[r,_,c,l("p",null,[o(e,{to:"/blogs/algorithm/leetcode77.html"},{default:n(()=>[t("77.组合")]),_:1}),m,o(e,{to:"/blogs/algorithm/leetcode216.html"},{default:n(()=>[t("216.组合总和III")]),_:1}),g,o(e,{to:"/blogs/algorithm/leetcode17.html"},{default:n(()=>[t("17.电话号码的字母组合")]),_:1}),b,o(e,{to:"/blogs/algorithm/leetcode39.html"},{default:n(()=>[t("39.组合总和")]),_:1}),f,o(e,{to:"/blogs/algorithm/leetcode40.html"},{default:n(()=>[t("40.组合总和II")]),_:1}),I,o(e,{to:"/blogs/algorithm/leetcode131.html"},{default:n(()=>[t("131.分割回文串")]),_:1}),p,o(e,{to:"/blogs/algorithm/leetcode93.html"},{default:n(()=>[t("93.复原IP地址")]),_:1}),x,o(e,{to:"/blogs/algorithm/leetcode78.html"},{default:n(()=>[t("78.子集")]),_:1}),k,o(e,{to:"/blogs/algorithm/leetcode90.html"},{default:n(()=>[t("90.子集II")]),_:1}),w,o(e,{to:"/blogs/algorithm/leetcode491.html"},{default:n(()=>[t("491.递增子序列")]),_:1}),N,o(e,{to:"/blogs/algorithm/leetcode46.html"},{default:n(()=>[t("46.全排列")]),_:1}),v,o(e,{to:"/blogs/algorithm/leetcode47.html"},{default:n(()=>[t("47.全排列 II")]),_:1}),B,o(e,{to:"/blogs/algorithm/leetcode332.html"},{default:n(()=>[t("332.重新安排行程")]),_:1}),C,o(e,{to:"/blogs/algorithm/leetcode51.html"},{default:n(()=>[t("51.N皇后")]),_:1}),P,o(e,{to:"/blogs/algorithm/leetcode37.html"},{default:n(()=>[t("37.解数独")]),_:1})])]),V,L,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode77.html"},{default:n(()=>[t("77.组合")]),_:1}),t("：单集合求组合")]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode216.html"},{default:n(()=>[t("216.组合总和III")]),_:1}),t("：单集合求组合+剪枝")]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode17.html"},{default:n(()=>[t("17.电话号码的字母组合")]),_:1}),t("：多集合求组合")]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode39.html"},{default:n(()=>[t("39.组合总和")]),_:1}),t("：元素可重复使用")]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode40.html"},{default:n(()=>[t("40.组合总和II")]),_:1}),t("：元素值重复+去重")])]),M,R,T,j,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode46.html"},{default:n(()=>[t("46.全排列")]),_:1})]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode47.html"},{default:n(()=>[t("47.全排列 II")]),_:1}),t("：去重")])]),y,E,q,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode131.html"},{default:n(()=>[t("131.分割回文串")]),_:1})]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode93.html"},{default:n(()=>[t("93.复原IP地址")]),_:1})])]),z,A,D,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode78.html"},{default:n(()=>[t("78.子集")]),_:1})]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode90.html"},{default:n(()=>[t("90.子集II")]),_:1})]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode491.html"},{default:n(()=>[t("491.递增子序列")]),_:1})])]),F,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode51.html"},{default:n(()=>[t("51.N皇后")]),_:1})]),l("li",null,[o(e,{to:"/blogs/algorithm/leetcode37.html"},{default:n(()=>[t("37.解数独")]),_:1})])]),G,l("ul",null,[l("li",null,[o(e,{to:"/blogs/algorithm/leetcode332.html"},{default:n(()=>[t("332.重新安排行程")]),_:1})])])])}const Q=s(i,[["render",H],["__file","8_backtracking.html.vue"]]);export{Q as default};
