import{_ as i,r as l,o as r,c as t,a as e,b as s,d as n,e as o}from"./app-gsADIKnZ.js";const d={},c={href:"https://vuepress-theme-reco.recoluan.com/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://juejin.cn/post/7140934570370662407",target:"_blank",rel:"noopener noreferrer"},p={href:"https://vuepress-theme-reco.recoluan.com/docs/theme/frontmatter-home.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/video/BV17t41177cr",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.bilibili.com/video/BV1vb411m7NY",target:"_blank",rel:"noopener noreferrer"},v={href:"https://vuepress-theme-reco.recoluan.com/",target:"_blank",rel:"noopener noreferrer"},b=e("br",null,null,-1),k={href:"https://vuepress-theme-reco.recoluan.com/",target:"_blank",rel:"noopener noreferrer"},g=o(`<h2 id="👾使用感受" tabindex="-1"><a class="header-anchor" href="#👾使用感受" aria-hidden="true">#</a> 👾使用感受</h2><p>优点：</p><ol><li>美观简洁、容易上手</li><li>使用markdown语法，方便迁移、备份</li><li>在本地用vscode写markdown很舒适</li><li>稳定、小巧（不像wordpress那样在网站上编写，需要的服务器资源较少）</li></ol><p>缺点：</p><ol><li>官方文档不够详细，使用人数较少，很多问题无法快速找到答案</li><li>添加图片太麻烦</li></ol><h2 id="🐞使用中发现的问题" tabindex="-1"><a class="header-anchor" href="#🐞使用中发现的问题" aria-hidden="true">#</a> 🐞使用中发现的问题</h2><ol><li>热更新问题：如果涉及文件的增加删除（目录上发生改变），要重新执行<code>yarn dev</code>才能更新</li><li>有时候文章目录不显示...当然这个问题在发布的静态中不会出现，只是本地<code>yarn dev</code>的时候不太舒服</li></ol><h2 id="🤖待完善" tabindex="-1"><a class="header-anchor" href="#🤖待完善" aria-hidden="true">#</a> 🤖待完善</h2><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 云服务器上的构建尝试</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> webhook推送触发自动构建</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 备案</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> ssl证书配置</li></ul><h2 id="当前应急方案" tabindex="-1"><a class="header-anchor" href="#当前应急方案" aria-hidden="true">#</a> 当前应急方案</h2><p>本站部署暂未完成，应急方案如下：<br></p><ol><li>在本地（windows）进行构建，推送到github仓库</li><li>云服务器（ubuntu20.04）上apache2+crontab定时执行git pull脚本</li></ol><h3 id="本地-windows" tabindex="-1"><a class="header-anchor" href="#本地-windows" aria-hidden="true">#</a> 本地（windows）</h3><p>本地的提交脚本如下，用<code>bash push.sh</code>执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># yarn build</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;change&quot;</span>
<span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里不知道为什么用脚本执行<code>yarn build</code>的时候会报错&quot;Yarn requires Node.js 4.0 or higher to be installed.&quot;，直接在终端执行可以成功。<br> 执行<code>yarn build</code>报错&quot;Error: EBUSY: resource busy or locked, unlink &#39;C:\\CodeSpace\\vuepress-reco2.vuepress\\dist\\assets\\app-zpDucuRP.js&#39;&quot;，可以执行<code>yarn cache clean</code>解决。</p><h3 id="云服务器" tabindex="-1"><a class="header-anchor" href="#云服务器" aria-hidden="true">#</a> 云服务器</h3><p>deploy.sh内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">cd</span> /root/vuepress-reco2
<span class="token function">git</span> pull
<span class="token function">cp</span> <span class="token parameter variable">-rf</span> .vuepress/dist/ ~
<span class="token function">rm</span> <span class="token parameter variable">-r</span> /root/html
<span class="token function">mv</span> /root/dist /root/html
<span class="token function">cp</span> <span class="token parameter variable">-rf</span> /root/html /var/www
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑crontab要执行的命令:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/crontab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加以下字段：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>*/10  *   * * *   root   bash /root/vuepress-reco2/deploy.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>意思是每十分钟执行一次脚本deploy.sh，以下是官方样例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存退出后重新载入cron配置：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service cron reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开启crontab日记：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo vim /etc/rsyslog.d/50-default.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将cron相关行的注释取消，保存退出，重启rsyslog：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo service rsyslog restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31);function f(x,_){const a=l("ExternalLinkIcon");return r(),t("div",null,[e("p",null,[s("本站使用"),e("a",c,[s("vuepress-theme-reco2.x"),n(a)]),s("主题，参考链接如下：")]),e("ol",null,[e("li",null,[e("a",u,[s("个人博客搭建遇坑流程のVuePress2 📕"),n(a)])]),e("li",null,[e("a",p,[s("主题官网文档"),n(a)])]),e("li",null,[e("a",h,[s("1小时快速搭建vuepress个人博客【2022重录带源码】"),n(a)])]),e("li",null,[e("a",m,[s("【啰里啰嗦】一步步搭建 VuePress 及优化"),n(a)])])]),e("p",null,[s("建议先看链接4的P1把本地环境搭建好，再跟着链接1和链接2搭建"),e("a",v,[s("vuepress-theme-reco2.x"),n(a)]),s("博客，最后跟着链接3把博客部署到云服务器上。 "),b,s(" 这里发现链接3的部署是在CentOS服务器上，而CentOS7不支持"),e("a",k,[s("vuepress-theme-reco2.x"),n(a)]),s("所需的node16，先使用下文的应急方案。")]),g])}const y=i(d,[["render",f],["__file","hello.html.vue"]]);export{y as default};
