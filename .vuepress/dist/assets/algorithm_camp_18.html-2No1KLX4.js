import{_ as s,r as a,o as h,c as i,a as e,d as o,w as r,b as t,e as c}from"./app-_5Rv1Wsf.js";const d={},_={class:"custom-container info"},u=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),m=e("p",{class:"custom-container-title"},"交作业",-1),E=e("br",null,null,-1),p=e("br",null,null,-1),f=e("br",null,null,-1),g=e("br",null,null,-1),B=c('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>513.找树左下角的值</li><li>112.路径总和 113.路径总和II</li><li>106.从中序与后序遍历序列构造二叉树 105.从前序与中序遍历序列构造二叉树</li></ul><h2 id="详细布置" tabindex="-1"><a class="header-anchor" href="#详细布置" aria-hidden="true">#</a> 详细布置</h2><h3 id="找树左下角的值" tabindex="-1"><a class="header-anchor" href="#找树左下角的值" aria-hidden="true">#</a> 找树左下角的值</h3><p>本地递归偏难，反而迭代简单属于模板题， 两种方法掌握一下</p>',5),b={href:"https://programmercarl.com/0513.%E6%89%BE%E6%A0%91%E5%B7%A6%E4%B8%8B%E8%A7%92%E7%9A%84%E5%80%BC.html",target:"_blank",rel:"noopener noreferrer"},x=e("h3",{id:"路径总和",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#路径总和","aria-hidden":"true"},"#"),t(" 路径总和")],-1),k=e("p",null,"本题 又一次设计要回溯的过程，而且回溯的过程隐藏的还挺深，建议先看视频来理解",-1),w=e("ol",{start:"112"},[e("li",null,"路径总和，和 113. 路径总和ii 一起做了。 优先掌握递归法。")],-1),A={href:"https://programmercarl.com/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},v=e("h3",{id:"从中序与后序遍历序列构造二叉树",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#从中序与后序遍历序列构造二叉树","aria-hidden":"true"},"#"),t(" 从中序与后序遍历序列构造二叉树")],-1),C=e("p",null,"本题算是比较难的二叉树题目了，大家先看视频来理解。",-1),I=e("p",null,"106.从中序与后序遍历序列构造二叉树，105.从前序与中序遍历序列构造二叉树 一起做，思路一样的",-1),F={href:"https://programmercarl.com/0106.%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"};function L(N,V){const l=a("RouterLink"),n=a("ExternalLinkIcon");return h(),i("div",null,[e("div",_,[u,m,e("p",null,[o(l,{to:"/blogs/algorithm/leetcode513.html"},{default:r(()=>[t("513.找树左下角的值")]),_:1}),E,o(l,{to:"/blogs/algorithm/leetcode112.html"},{default:r(()=>[t("112.路径总和")]),_:1}),p,o(l,{to:"/blogs/algorithm/leetcode113.html"},{default:r(()=>[t("113.路径总和 II")]),_:1}),f,o(l,{to:"/blogs/algorithm/leetcode106.html"},{default:r(()=>[t("106.从中序与后序遍历序列构造二叉树")]),_:1}),g,o(l,{to:"/blogs/algorithm/leetcode105.html"},{default:r(()=>[t("105.从前序与中序遍历序列构造二叉树")]),_:1})])]),B,e("p",null,[e("a",b,[t("题目链接/文章讲解/视频讲解"),o(n)])]),x,k,w,e("p",null,[e("a",A,[t("题目链接/文章讲解/视频讲解"),o(n)])]),v,C,I,e("p",null,[e("a",F,[t("题目链接/文章讲解/视频讲解"),o(n)])])])}const M=s(d,[["render",L],["__file","algorithm_camp_18.html.vue"]]);export{M as default};
