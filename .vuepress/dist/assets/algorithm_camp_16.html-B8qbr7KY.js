import{_ as h,r as n,o as s,c,a as e,d as t,b as o,w as l,e as _}from"./app-lUfVjYTO.js";const i={},d=e("br",null,null,-1),m=e("br",null,null,-1),p=e("br",null,null,-1),E=_('<h2 id="今日任务" tabindex="-1"><a class="header-anchor" href="#今日任务" aria-hidden="true">#</a> 今日任务</h2><ul><li>104.二叉树的最大深度</li><li>559.n叉树的最大深度</li><li>111.二叉树的最小深度</li><li>222.完全二叉树的节点个数</li></ul><p>迭代法，大家可以直接过，二刷有精力的时候 再去掌握迭代法。</p><h2 id="_104-二叉树的最大深度-优先掌握递归" tabindex="-1"><a class="header-anchor" href="#_104-二叉树的最大深度-优先掌握递归" aria-hidden="true">#</a> 104.二叉树的最大深度（优先掌握递归）</h2><p>什么是深度，什么是高度，如何求深度，如何求高度，这里有关系到二叉树的遍历方式。</p><p>大家 要先看视频讲解，就知道以上我说的内容了，很多录友刷过这道题，但理解的还不够。</p>',6),u={href:"https://programmercarl.com/0104.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"_111-二叉树的最小深度-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_111-二叉树的最小深度-优先掌握递归","aria-hidden":"true"},"#"),t(" 111.二叉树的最小深度（优先掌握递归）")],-1),A=e("p",null,"先看视频讲解，和最大深度 看似差不多，其实 差距还挺大，有坑。",-1),g={href:"https://programmercarl.com/0111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},B=e("h2",{id:"_222-完全二叉树的节点个数-优先掌握递归",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_222-完全二叉树的节点个数-优先掌握递归","aria-hidden":"true"},"#"),t(" 222.完全二叉树的节点个数（优先掌握递归）")],-1),b=e("p",null,"需要了解，普通二叉树 怎么求，完全二叉树又怎么求",-1),x={href:"https://programmercarl.com/0222.%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"};function k(C,F){const r=n("RouterLink"),a=n("ExternalLinkIcon");return s(),c("div",null,[e("p",null,[t("::: 交作业 "),o(r,{to:"/blogs/algorithm/leetcode104.html"},{default:l(()=>[t("104.二叉树的最大深度")]),_:1}),d,o(r,{to:"/blogs/algorithm/leetcode559.html"},{default:l(()=>[t("559.n叉树的最大深度")]),_:1}),m,o(r,{to:"/blogs/algorithm/leetcode111.html"},{default:l(()=>[t("111.二叉树的最小深度")]),_:1}),p,o(r,{to:"/blogs/algorithm/leetcode222.html"},{default:l(()=>[t("222.完全二叉树的节点个数")]),_:1}),t(" :::")]),E,e("p",null,[e("a",u,[t("题目链接/文章讲解/视频讲解"),o(a)])]),f,A,e("p",null,[e("a",g,[t("题目链接/文章讲解/视频讲解"),o(a)])]),B,b,e("p",null,[e("a",x,[t("题目链接/文章讲解/视频讲解"),o(a)])])])}const N=h(i,[["render",k],["__file","algorithm_camp_16.html.vue"]]);export{N as default};
