import{_ as s,o,c as r,a as e,b as a,e as t}from"./app-1jqZCe4N.js";const c={},n=e("blockquote",null,[e("p",null,"机翻润色，自用"),e("p",null,[e("a",{href:"/file/Nachos%E8%8B%B1%E6%96%87%E6%96%87%E6%A1%A3.pdf"},"点击下载Nachos英文文档")])],-1),h=e("div",{class:"custom-container info"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"INFO"),e("p",null,[a("V22.0202-001: Computer Systems Organization II (Honors)"),e("br"),a(" Spring 2005")]),e("p",null,"Vijay Karamcheti"),e("p",null,[a("Department of Computer Science"),e("br"),a(" Courant Institute of Mathematical Sciences"),e("br"),a(" New York University")])],-1),i=t('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>本文档描述了在纽约大学一学期的荣誉计算机系统组织II课程V22.0202-001中使用的Nachos编程项目。</p><p>该文档源于Jeff Chase创建的项目指南(<a href="mailto:chase@cs.duke.edu">chase@cs.duke.edu</a>)，用于杜克大学(Duke University)的本科生操作系统入门课程CPS 110。</p><p>多年来，我对原始文档做了几次修改，包括一些作业描述、格式，以及制定适合纽约大学使用的政策、作业和文档参考。</p><p>我没有修改Jeff Chase对原始文件的序言。</p><p>这出现在文档的标题中:“原始文档的序言(Jeff Chase)”，紧跟在本页后面。</p><p>Vijay karamcheti<br> 2005年1月13日<br> 纽约</p><h2 id="原始文档的序言-jeff-chase" tabindex="-1"><a class="header-anchor" href="#原始文档的序言-jeff-chase" aria-hidden="true">#</a> 原始文档的序言(Jeff Chase)</h2><p>本文档描述了用于CPS 110的Nachos编程项目（CPS 110是杜克大学一学期的本科生操作系统课程）。文档包括对所有作业的完整描述，以及一些相关材料。这些材料有助于引导学生、指导他们完成练习，并避免一些常见的陷阱。它旨在补充其他关于Nachos的材料，包括<a href="">Nachos路线图</a>和Darrell Anderson放在在CPS 11G课程网站上的<a href="">Nachos资源页面</a>。</p><p>Nachos是一个由加州大学伯克利分校的汤姆·安德森博士和他的同事构思和实现的教学操作系统。我有幸与汤姆相识，当时他是我的同事，也是在西雅图华盛顿大学的研究生，他现在已经回去担任教授了。这不是我第一次试图在一些小方面改进他所做的事情，我相信也不会是最后一次。</p><p>这些项目中的几乎所有内容都直接来自Nachos发行版中包含的Berkeley项目，以及Web上可用的最新版本。1994年秋天，《Nachos路线图》(A Road Map Through Nachos)的作者托马斯·纳滕博士(Thomas Narten)在杜克大学首次使用了伯克利的项目。他的材料被Dr. Carla Ellis和她的助教改编为1995-1997学年的CPS 110课程。根据我在1997年秋季和随后几个学期教这门课的经验，我重新组织、修改和扩展了她的材料。</p><p>对学生来说，目前的CPS 110项目通常比伯克利的项目更容易。现在我们不使用与文件系统内部或网络有关的作业，将这些领域的项目留给后续课程。我们已经努力将项目分成大小均匀的块，尽早开始、在整个学期中定期构建功能、提供足够的分步指导，以吸引学生慢慢进入Nachos，而不会让他们不知所措。我们提供的指导越多，我们的学生就越能在一定的努力下完成更多的任务，从而为每个人带来更满意的体验。</p><p><strong>这段写给学生。</strong> 虽然我们已经努力为你简化这些项目，但大多数杜克大学的本科生发现，这些项目还是很难一个学期做完，完全占据了他们的生活。前几个学期的一个普遍误解是：我们是虐待狂，喜欢看到学生受苦。事实上，情况并非如此。我们很高兴看到学生们为他们所取得的成就感到自豪，并为操作系统中相对较小的一组简单抽象所带来的力量而兴奋（即使是像Nachos这样的玩具）。</p><p>我们开发和改进这些项目的目标是尽量减少您的工作和熟悉时间，最大限度地提高项目的学习价值。即便如此，这些项目还是要求您投入大量精力来学习操作系统的内部原理，即使这些原理在您的一生中可能都不会再使用。然而，我们相信，这样做你会学到更多关于操作系统和软件系统的知识，而不仅仅是Nachos。</p><p>即便如此，我们仍致力于继续完善这些项目。你的责任是尽你所能和他们一起做好工作，保持积极的态度，花时间提出我们可以让学生在接下来的课程中更轻松、更有成效的建设性方法。您可以亲自告诉我们，发送电子邮件，或填写课程网站上的匿名建议表。我们不会降低门槛，但我们会尽我们所能帮助你克服它。</p>',15),p=[n,h,i];function l(d,f){return o(),r("div",null,p)}const _=s(c,[["render",l],["__file","0.html.vue"]]);export{_ as default};
