import{_ as l,o as i,c as a,e}from"./app-CSCmXqsF.js";const u={},r=e('<h2 id="系统架构包括什么形式" tabindex="-1"><a class="header-anchor" href="#系统架构包括什么形式" aria-hidden="true">#</a> 系统架构包括什么形式？</h2><ul><li>C/S架构</li><li>B/S架构</li></ul><h2 id="c-s架构" tabindex="-1"><a class="header-anchor" href="#c-s架构" aria-hidden="true">#</a> C/S架构？</h2><ul><li>Client / Server（客户端 / 服务器）</li><li>C/S架构的软件或者说系统有哪些呢？ <ul><li>QQ（先去腾讯官网下载一个QQ软件，几十MB，然后把这个客户端软件安装上去，然后输入QQ号以及密码，登录之后，就可以和你的朋友聊天了，就可以使用这个软件了。）</li></ul></li><li>C/S架构的特点：需要安装特定的客户端软件。</li><li>C/S架构的系统优点和缺点分别是什么？ <ul><li>优点： <ul><li>速度快（软件中的数据大部分都是集成到客户端软件当中的，很少量的数据从服务器端传送过来，所以C/S结构的系统速度快）</li><li>体验好（速度又快，界面又酷炫，当然体验好了。）</li><li>界面酷炫（专门的语言去实现界面的，更加灵活。）</li><li>服务器压力小（因为大量的数据都是集成在客户端软件当中，所以服务器只需要传送很少的数据量，当然服务器压力小。）</li><li>安全（因为大量的数据是集成在客户端软件当中的，并且客户端有很多个，服务器虽然只有一个，就算服务器那边地震了，火灾了，服务器受损了，问题也不大，因为大量的数据在多个客户端上有缓存，有存储，所以从这个方面来说，C/S结构的系统比较安全。）</li><li>.....</li></ul></li><li>缺点： <ul><li>升级维护比较差劲。（升级维护比较麻烦。成本比较高。每一个客户端软件都需要升级。有一些软件不是那么容易安装的。）</li></ul></li></ul></li></ul><h2 id="b-s架构" tabindex="-1"><a class="header-anchor" href="#b-s架构" aria-hidden="true">#</a> B/S架构？</h2><ul><li>B/S（Browser / Server，浏览器 / 服务器）</li><li>http://www.baidu.com</li><li>http://www.jd.com</li><li>http://www.126.com</li><li>B/S结构的系统是不是一个特殊的C/S系统？ <ul><li>实际上B/S结构的系统还是一个C/S，只不过这个C比较特殊，这个Client是一个固定不变浏览器软件。</li></ul></li><li>B/S结构的系统优点和缺点是： <ul><li>优点： <ul><li>升级维护方便，成本比较低。（只需要升级服务器端即可。）</li><li>不需要安装特定的客户端软件，用户操作极其方便。只需要打开浏览器，输入网址即可。</li></ul></li><li>缺点： <ul><li>速度慢（不是因为带宽低的问题，是因为所有的数据都是在服务器上，用户发送的每一个请求都是需要服务器全身心的响应数据，所以B/S结构的系统在网络中传送的数据量比较大。）</li><li>体验差（界面不是那么酷炫，因为浏览器只支持三个语言HTML CSS JavaScript。在加上速度慢。）</li><li>不安全（所有的数据都在服务器上，只要服务器发生火灾，地震等不可抗力，最终数据全部丢失。）</li><li>....</li></ul></li></ul></li></ul><h2 id="c-s和b-s结构的系统-哪个好-哪个不好" tabindex="-1"><a class="header-anchor" href="#c-s和b-s结构的系统-哪个好-哪个不好" aria-hidden="true">#</a> C/S和B/S结构的系统，哪个好，哪个不好？</h2><ul><li>这个问题问的没有水平。并不是哪个好，哪个不好。不同结构的系统在不同的业务场景下有不同的适用场景。</li><li>娱乐性软件建议使用？ <ul><li>C/S 结构</li></ul></li><li>公司内部使用的一些业务软件建议使用？ <ul><li>公司内部使用的系统，需要维护成本低。</li><li>公司内部使用的系统，不需要很酷炫。</li><li>公司内部使用的企业级系统主要是能够进行数据的维护即可。</li><li>B/S 结构。</li></ul></li></ul><h2 id="注意了-开发b-s结构的系统-其实就是开发网站-其实就是开发一个web系统。" tabindex="-1"><a class="header-anchor" href="#注意了-开发b-s结构的系统-其实就是开发网站-其实就是开发一个web系统。" aria-hidden="true">#</a> 注意了：开发B/S结构的系统，其实就是开发网站，其实就是开发一个WEB系统。</h2><ul><li>开发一个WEB系统你需要会哪些技术？ <ul><li>WEB前端（运行在浏览器上的程序。） <ul><li>HTML</li><li>CSS</li><li>JavaScript</li></ul></li><li>WEB后端（WEB服务器端的程序。） <ul><li>Java可以（Java做WEB开发我们称为JavaWEB开发。JavaWEB开发最核心的规范：Servlet【Server Applet服务器端的Java小程序。】）</li><li>C语言也可以</li><li>C++也可以</li><li>Python也行</li><li>PHP也可以</li><li>....</li></ul></li></ul></li></ul><h2 id="javaee是什么" tabindex="-1"><a class="header-anchor" href="#javaee是什么" aria-hidden="true">#</a> JavaEE是什么？</h2><ul><li>Java包括三大块： <ul><li>JavaSE <ul><li>Java标准版（一套类库：别人写好的一套类库，只不过这个类库是标准类库，走EE，或者走ME，这个SE一定是基础，先学。）</li></ul></li><li>JavaEE（WEB方向，WEB系统。） <ul><li>Java企业版（也是一套类库：也是别人写好的一套类库，只不过这套类库可以帮助我们完成企业级项目的开发，专门为企业内部提供解决方案的一套（多套）类库。）</li><li>别人写好的，你用就行了，用它可以开发企业级项目。</li><li>可以开发web系统。</li><li>Java比较火爆的就是这个JavaEE方向。</li></ul></li><li>JavaME <ul><li>Java微型版（还是一套类库，只不过这套类库帮助我们进行电子微型设备内核程序的开发）</li><li>机顶盒内核程序，吸尘器内核程序，电冰箱内核程序，电饭煲内核程序。。。。。</li></ul></li></ul></li><li>JavaEE实际上包括很多种规范，13种规范，其中Servlet就是JavaEE规范之一。学Servlet还是Java语言。</li></ul>',12),t=[r];function h(d,c){return i(),a("div",null,t)}const S=l(u,[["render",h],["__file","javaweb_1.html.vue"]]);export{S as default};
