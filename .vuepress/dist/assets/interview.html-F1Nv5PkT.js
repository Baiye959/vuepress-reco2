import{_ as n,r as a,o as l,c as s,a as t,b as e,d as o,e as r}from"./app-imBHyMlz.js";const d="/image/image_DUg7cRk9s-.png",h="/image/image_3Agb2EFGQE.png",p="/image/image_TWGx3B8YXq.png",c="/image/image_tTrApZpwYe.png",g="/image/image_zEiUmSEPPb.png",_="/image/image_8GJaI0kUe5.png",m="/image/image_z37I6j8gZv.png",T={},P=r('<h2 id="自我介绍" tabindex="-1"><a class="header-anchor" href="#自我介绍" aria-hidden="true">#</a> 自我介绍</h2><p>面试官您好，我叫郑灵兮，来自福建福州，现为厦门大学计算机学院本科三年级学生，专业是计算机科学与技术；我主要有三个跟后端开发相关的项目，按时间的先后来说吧。</p><p>在去年6月到8月我参与了嵌入式大赛，做了第一个后端相关项目：基于Taurus&amp;Pegasus的斑马线AI劝导员，这是一个成员比较多、软硬件结合的项目，我负责完成基于Flask的可视化Web网站、还有使用华为云IoTDA平台将软件和硬件联系起来，从而及时更新Web和APP显示的数据、并实时调动闪光和语音播报提醒交警出现违规。</p><p>在去年8月参与了中美创客大赛，做了第二个后端相关项目生命珊瑚，这个项目是数字孪生在海葬方面的应用，我负责完成基于Flask的Web网站。这个项目技术上没有什么亮点，但是在为期一个月的比赛期间，我和设计同学一起讨论产品定位、做用户调研、设计产品、不断修改产品、完成路演，了解到了团队合作和沟通的重要性。同时，由于这个项目和上一个项目在同一时间开展，我也学会了如何在压力下保持冷静和专注、在有限时间内高效地工作和管理任务，以确保项目按时完成并达到预期目标。</p><p>在今年2月到3月，参与了第三个项目——实验室用户管理系统。我是人工智能社团的副社长，所以社团指导老师给了这个项目，用来管理社团相关的实验室成员信息（大概有50人），现在部署在活动室的nas上。这个项目是SpringBoot+React做的，我负责后端部分、另一个成员负责前端部分，主要实现了用户的注册、登录、查询、管理等功能，并且自定义错误码、封装了全局异常处理器、规范了报错。还用JUnit完成了测试工作。</p><p>以上就是我参与的三个后端相关项目，感谢贵公司能给我这次面试的机会，谢谢！</p><h2 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络" aria-hidden="true">#</a> 计算机网络</h2><h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h3><h4 id="_1-说下计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#_1-说下计算机网络体系结构" aria-hidden="true">#</a> 1. 说下计算机网络体系结构</h4><p>计算机网络体系结构⼀般有三种，OSI 体系结构（七层）、TCP/IP体系结构（四层）、还有五层体系结构。</p><p>总的来说，OSI体系结构是一个理论上的网络通信模型；TCP/IP体系结构是实际上的网络通信模型；而五层模型是为了方便学习，综合了前面两种体系结构，既简洁、又能将概念讲清楚。</p><p><img src="'+d+'" alt=""></p><p><img src="'+h+'" alt=""></p><p><strong>OSI体系结构（七层）</strong></p><p>OSI 体系结构是国际标准化组织制定的⼀个标准体系。</p><ul><li>应用层：通过应用进程之间的交互来实现应用程序，这层的协议定义了<strong>应用进程间</strong> <strong>通信和交 互</strong>的规则</li><li>表示层：负责<strong>数据的加密和压缩</strong>。确保⼀个系统的应用层发送的信息可以被另⼀个系统的应用 层读取。</li><li>会话层：顾名思义，是负责<strong>建立、管理、终止会话</strong>的，也算是应用程序和网络之间的接口</li><li>传输层：提供源端与目的端之间提供可靠的透明数据传输，让<strong>不同主机上运行的进程</strong>可以通信</li><li>网络层：将网络地址翻译成对应的物理地址，实现不同网络之间的路径选择</li><li>数据链路层：在物理层提供比特流服务的基础上，建立相邻结点之间的数据链路。</li><li>物理层：负责物理连接，提供比特流服务</li></ul><p><strong>TCP/IP体系结构（四层）</strong></p>',17),u={href:"https://xiaolincoding.com/network/1_base/tcp_ip_model.html",title:"https://xiaolincoding.com/network/1_base/tcp_ip_model.html",target:"_blank",rel:"noopener noreferrer"},S=r('<ul><li>应用层：对应OSI体系结构的应用层、表示层和会话层，在这层实现应用程序、为用户提供应用功能（比如 HTTP、FTP、Telnet、DNS、SMTP）</li><li>传输层/运输层：（TCP/UDP）传输层是为应用层提供网络支持的，应用层的数据包只要传给传输层就可以了。</li><li>网络层/网际层：负责将数据从一个设备传输到另一个设备（寻址、路由算法：IP 协议的寻址作用是告诉我们去往下一个目的地该朝哪个方向走，路由则是根据「下一个目的地」选择路径。寻址更像在导航，路由更像在操作方向盘。）</li><li>网络接口层：跟OSI 体系结构的数据链路层、物理层对应，主要为网络层提供「链路级别」传输的服务，负责在以太网、WiFi 这样的底层网络上发送原始数据包（工作在网卡这个层次，使用 MAC 地址来标识网络上的设备。）</li></ul><h4 id="_2-说一下每一层对应的网络协议有哪些" tabindex="-1"><a class="header-anchor" href="#_2-说一下每一层对应的网络协议有哪些" aria-hidden="true">#</a> 2. 说一下每一层对应的网络协议有哪些？</h4><p><img src="'+p+'" alt=""></p><h4 id="_3-那么数据在各层之间是怎么传输的呢" tabindex="-1"><a class="header-anchor" href="#_3-那么数据在各层之间是怎么传输的呢" aria-hidden="true">#</a> 3. 那么数据在各层之间是怎么传输的呢？</h4><p>对发送方来说，从上层到下层 是一层一层加包装；对接收方来说，从下层到上层 是一层一层解开包装。</p><p>发送部分：</p><ol><li><strong>首先，发送数据的进程在应用层准备好待传输数据，如果目的地址是域名就先通过DNS解析成IP地址</strong></li><li><strong>然后再交付到运输层（TCP/UDP），运输层对数据进行分组等操作，然后给每一个分组都加上首部，形成报文段</strong>(或用户数据报)，首部包括源地址、源端口、目的地址、目的端口、校验和之类的数据</li><li><strong>再交付到网络层（IP层），对这些分组数据加上首部形成IP数据报</strong>，首部包括源地址、目的地址(跟运输层的目的地址不同，运输层的目的地址是数据要传送的最终地址，而该目的地址是通过路由表信息得出，是该数据下一步该转移的目的计算机)和校验和等数据</li><li><strong>然后交付到数据链路层(mac层)，先是添加首部和尾部，把数据封装成帧，然后进行透明传输</strong>(也就是封装的数据里面，如果出现首部SOH和尾部EOT这样的数据，对其进行转义，也就是加上ESC转义字符，这种方法称为字节/字符填充)</li><li><strong>然后交付到物理层，根据数据链路层的mac地址找到目的计算机，通过特定的传输介质传送到下一个地址</strong></li></ol><p>如果源主机与最终目的主机在同一个网段，则该地址是最终的目的主机，开始接收数据；如果不在同一个网段，则该地址可能是路由器，先解包装到网络层，再根据路由算法发到下一个地址（如此循环直至找到最终主机，将数据传送到目的应用）</p><p>接收部分：</p><ol><li><strong>开始接收，把数据从物理层交付到数据链路层，对数据进行卸装，这一层会对接收的数据进行差错检测，有差错的数据都会被丢弃</strong></li><li><strong>接下来交付到IP层，解帧校验</strong></li><li><strong>然后交付到运输层，在该主机上，根据端口找到对应的应用</strong>（使用TCP协议时，提供一种面向连接的可靠的传输服务，可以说是建立了一个虚拟通道，源主机的数据通过该虚拟通道进行传输；使用UDP协议时，提供一种面向的非连接的尽最大努力的不可靠的传输服务，数据传输快，但是无法保证数据100%传输。）</li><li><strong>建立了传输连接后，应用开始接收数据</strong>，发送方数据和接收方都必须满足相同的标准应用层协议，如http、ftp、smtp等，通过标准协议应用即可正确的接收源主机发送过来的数据。</li></ol><h3 id="网络基础" tabindex="-1"><a class="header-anchor" href="#网络基础" aria-hidden="true">#</a> 网络基础</h3><h4 id="_4-从浏览器地址栏输入-url-到显示主页的过程" tabindex="-1"><a class="header-anchor" href="#_4-从浏览器地址栏输入-url-到显示主页的过程" aria-hidden="true">#</a> 4. 从浏览器地址栏输入 url 到显示主页的过程？</h4><ol><li><p>第⼀步：输⼊URL并解析</p><p>输⼊ URL 后，浏览器会解析出协议、主机、端⼝、路径等信息，并构造⼀个HTTP请求（浏览器会根据请求头判断是否有 HTTP缓存，并根据是否有缓存决定是从服务器获取资源还是使用缓存资源）</p></li><li><p>第二步：DNS域名解析, 将域名解析成对应的IP地址</p><p>在发送HTTP请求之前，浏览器需要知道想要访问网页（url）对应的IP地址，这就需要使用到 DNS域名解析</p></li><li><p>第三步：建立起TCP连接之三次握手</p><p>客户端和服务器之间进行HTTP请求和HTTP响应的过程中，需要三次握手建立起TCP连接</p></li><li><p>第四步：浏览器发送HTTP/HTTPS请求到web服务器</p></li><li><p>第五步：服务器处理HTTP请求并返回HTTP报文</p><p>服务器会接受请求并将其传递给请求处理程序并发送HTTP响应，⼀般响应报⽂包含：请求的⽹⻚以及状态码，压缩类型，如何缓存的⻚⾯，设置的cookie</p></li><li><p>第六步：浏览器渲染页面</p></li><li><p>第七步：客户端和服务器之间进行四次挥手断开连接</p></li></ol><p><img src="'+c+'" alt=""></p><h4 id="_5-说说-dns-的解析过程" tabindex="-1"><a class="header-anchor" href="#_5-说说-dns-的解析过程" aria-hidden="true">#</a> 5. 说说 DNS 的解析过程？</h4><p>DNS（domain name system）域名解析系统，是⼀种将域名转换为IP地址的分布式系统。</p>',16),b=t("li",null,"先查询浏览器缓存是否有该域名对应的IP地址。",-1),x=t("li",null,"如果浏览器缓存中没有，就会去计算机本地的Host文件里查询有没有对应的缓存。",-1),N=t("li",null,"如果Host文件里也没有，就向本地的DNS服务器发送⼀个DNS查询请求。",-1),D=t("li",null,"如果本地DNS解析器有该域名的ip地址，就直接返回；如果没有，它会向根DNS服务器发出查询请求。（这里采用迭代查询吧）这个根DNS服务器不负责解析域名，但它能告诉本地DNS解析器应该向哪个顶级域（.com/.net/.org）的DNS服务器继续查询。",-1),I=t("li",null,"然后本地DNS解析器就接着向指定的顶级域名DNS服务器发出查询请求。顶级域DNS服务器也不负责具体的域名解析，但它能告诉本地DNS解析器应该前往哪个权威DNS服务器查询下⼀步的信息。",-1),f={href:"http://example.com",title:"example.com",target:"_blank",rel:"noopener noreferrer"},H=t("li",null,"然后本地DNS解析器将收到的IP地址返回给浏览器，还会将域名解析结果缓存在本地，下次访问时就能更快地响应。",-1),k=r('<h4 id="_6-说说-websocket-与-socket-的区别-不了解" tabindex="-1"><a class="header-anchor" href="#_6-说说-websocket-与-socket-的区别-不了解" aria-hidden="true">#</a> 6. 说说 WebSocket 与 Socket 的区别？（不了解）</h4><p><img src="'+g+'" alt=""></p><h4 id="_7-说一下你了解的端口及对应的服务" tabindex="-1"><a class="header-anchor" href="#_7-说一下你了解的端口及对应的服务" aria-hidden="true">#</a> 7. 说一下你了解的端口及对应的服务？</h4><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>21</td><td>FTP 文件传输服务</td></tr><tr><td>22</td><td>SSH 远程连接服务</td></tr><tr><td>23</td><td>TELNET 终端仿真服务</td></tr><tr><td>53</td><td>DNS 域名解析服务</td></tr><tr><td>80</td><td>HTTP 超文本传输服务</td></tr><tr><td>443</td><td>HTTPS 加密的超文本传输服务</td></tr><tr><td>3306</td><td>MYSQL数据库端口</td></tr><tr><td>6379</td><td>Redis数据库端口</td></tr><tr><td>8080</td><td>TCP服务端默认端口</td></tr><tr><td>8888</td><td>Nginx服务器的端口</td></tr><tr><td>27017</td><td>mongoDB数据库默认端口</td></tr></tbody></table><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h3><h4 id="_8-说说-http-常用的状态码及其含义" tabindex="-1"><a class="header-anchor" href="#_8-说说-http-常用的状态码及其含义" aria-hidden="true">#</a> 8. 说说 HTTP 常用的状态码及其含义？</h4><p><img src="'+_+'" alt=""></p><ul><li><code>1xx</code> 类状态码属于<strong>提示信息</strong>，是协议处理中的一种中间状态，实际用到的比较少。</li><li><code>2xx</code> 类状态码表示服务器<strong>成功</strong>处理了客户端的请求，也是我们最愿意看到的状态。 <ul><li>「<strong>200 OK</strong>」是最常见的成功状态码，表示一切正常。如果是非 <code>HEAD</code> 请求，服务器返回的响应头都会有 body 数据。</li><li>「<strong>204 No Content</strong>」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。</li><li>「<strong>206 Partial Content</strong>」是应用于 HTTP 分块下载或断点续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</li></ul></li><li><code>3xx</code> 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是<strong>重定向</strong>。 <ul><li>「<strong>301 Moved Permanently</strong>」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</li><li>「<strong>302 Found</strong>」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。 （301 和 302 都会在响应头里使用字段 <code>Location</code>，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。）</li><li>「<strong>304 Not Modified</strong>」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，也就是告诉客户端可以继续使用缓存资源，用于缓存控制。</li></ul></li><li><code>4xx</code> 类状态码表示客户端发送的<strong>报文有误</strong>，服务器无法处理，也就是错误码的含义。 <ul><li>「<strong>400 Bad Request</strong>」表示客户端请求的报文有错误，但只是个笼统的错误。</li><li>「<strong>403 Forbidden</strong>」表示服务器禁止访问资源，并不是客户端的请求出错。</li><li>「<strong>404 Not Found</strong>」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</li></ul></li><li><code>5xx</code> 类状态码表示客户端请求报文正确，但是<strong>服务器处理时内部发生了错误</strong>，属于服务器端的错误码。 <ul><li>「<strong>500 Internal Server Error</strong>」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。</li><li>「<strong>501 Not Implemented</strong>」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。</li><li>「<strong>502 Bad Gateway</strong>」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</li><li>「<strong>503 Service Unavailable</strong>」表示服务器当前很忙，暂时无法响应客户端，类似“网络服务正忙，请稍后重试”的意思。</li></ul></li></ul><h4 id="_9-http-有哪些请求方式" tabindex="-1"><a class="header-anchor" href="#_9-http-有哪些请求方式" aria-hidden="true">#</a> 9. HTTP 有哪些请求方式？</h4><p><img src="'+m+'" alt=""></p><p>其中，POST、DELETE、PUT、GET 对应增、删、改、查。</p><h2 id="hr面" tabindex="-1"><a class="header-anchor" href="#hr面" aria-hidden="true">#</a> HR面</h2><blockquote><p>自我介绍一下 详细介绍项目（场景、难点、收获） 比赛经历、学生工作经历 学生工作经历的细节和收获 比赛和学生工作怎么平衡，压力大的时候怎么办 跟队友有矛盾怎么办？说一个经历，怎么协调的？ 什么经历对性格有重大影响 性格的优点和缺点 希望从实习中得到什么 有什么要问的？</p></blockquote>',13);function E(U,C){const i=a("ExternalLinkIcon");return l(),s("div",null,[P,t("p",null,[t("a",u,[e("https://xiaolincoding.com/network/1_base/tcp_ip_model.html"),o(i)])]),S,t("ol",null,[b,x,N,D,I,t("li",null,[e('最后，本地DNS解析器向权威DNS服务器发送查询请求，这时候就会得到IP地址（ 权威DNS服务器是负责存储特定域名和IP地址映射的 服务器。当权威DNS服务器收到查询请求时，它会查找"'),t("a",f,[e("example.com"),o(i)]),e('"域名对应的IP地址，并将结果返回给本 地DNS解析器。）')]),H]),k])}const R=n(T,[["render",E],["__file","interview.html.vue"]]);export{R as default};
