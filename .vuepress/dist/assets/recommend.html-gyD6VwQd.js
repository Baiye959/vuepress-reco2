import{_ as e,r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-B2rSJneS.js";const l="/image/image_hguuE28Ogz.png",u="/image/556d6c1a3f1279590b0b5ae04d38e54_CDMbzYwvKF.png",r="/image/image_SFLU9uMlRq.png",k="/image/image_2jGGhvAwG3.png",d="/image/image_tuU3M63-5f.png",m="/image/image_8WyGCIAAc2.png",v="/image/image_g9nG1XP_pG.png",b="/image/image_ynUcO1neA0.png",g="/image/image_dhN9BNGHX9.png",h="/image/image_nuOikjYepD.png",y="/image/image_P_dXdgIMEa.png",f="/image/image_Dv62jWUlDY.png",w="/image/image_soypdOykhQ.png",_="/image/image_PxsdOolXk-.png",q={},N=p('<h2 id="一、项目简介" tabindex="-1"><a class="header-anchor" href="#一、项目简介" aria-hidden="true">#</a> 一、项目简介</h2><p>介绍视频：<a href="/video/github_recommend_system.mp4" title="github_recommend_system.mp4">github_recommend_system.mp4</a></p><p>这是一款基于flask和pyspark的个性化Github仓库推荐系统。</p><p>在该系统中，用户可以通过登陆注册后进入系统，通过语言分类查询自己喜欢的Github仓库，对仓库进行评分、收藏，方便在个人主页再次查看喜欢的仓库。</p><p>此外，系统实现了基于交替最小二乘的协同过滤推荐算法。在首页推荐9个与用户兴趣相关的优质Github仓库信息，还会在仓库详情页推荐10个与当前Github仓库相关的仓库。</p><p>总之，该系统能够为用户提供个性化、多样化的Github仓库推荐服务，帮助用户快速找到自己喜欢的Github仓库，提高体验，实现更好的知识传递和分享。</p><h2 id="二、项目结构与框架" tabindex="-1"><a class="header-anchor" href="#二、项目结构与框架" aria-hidden="true">#</a> 二、项目结构与框架</h2><h3 id="_2-1-功能结构" tabindex="-1"><a class="header-anchor" href="#_2-1-功能结构" aria-hidden="true">#</a> 2.1 功能结构</h3><p><img src="'+l+'" alt=""></p><h3 id="_2-2-技术框架" tabindex="-1"><a class="header-anchor" href="#_2-2-技术框架" aria-hidden="true">#</a> 2.2 技术框架</h3><table><thead><tr><th>项目</th><th>技术</th></tr></thead><tbody><tr><td>编程语言</td><td>python</td></tr><tr><td>数据处理</td><td>numpy/pandas</td></tr><tr><td>数据存储</td><td>mysql</td></tr><tr><td>机器学习</td><td>spark mllib</td></tr><tr><td>在线服务</td><td>flask</td></tr><tr><td>前端</td><td>bootstrap</td></tr><tr><td>操作系统</td><td>ubuntu20.04</td></tr><tr><td>编程工具</td><td>vscode</td></tr></tbody></table><h2 id="三、项目设计与实现" tabindex="-1"><a class="header-anchor" href="#三、项目设计与实现" aria-hidden="true">#</a> 三、项目设计与实现</h2><h3 id="_3-1-数据预处理" tabindex="-1"><a class="header-anchor" href="#_3-1-数据预处理" aria-hidden="true">#</a> 3.1 数据预处理</h3><h4 id="_3-1-1-数据抓取与预处理" tabindex="-1"><a class="header-anchor" href="#_3-1-1-数据抓取与预处理" aria-hidden="true">#</a> 3.1.1 数据抓取与预处理</h4>',14),E={href:"https://ossinsight.io/",title:"https://ossinsight.io/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://hellogithub.com/",title:"https://hellogithub.com/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/NaiboWang/EasySpider",title:"https://github.com/NaiboWang/EasySpider",target:"_blank",rel:"noopener noreferrer"},x=p(`<p>收集到3957条数据</p><p><a href="/file/github_data_-d9XU9Eogp.xlsx" title="github_data.xlsx">github_data.xlsx</a></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pandas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>清洗数据（删除含空值的行）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 读取excel数据</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;github_data.xlsx&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 删除包含空值的行</span>
df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 保存修改后的excel</span>
df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;github_data.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>清洗后剩余3737条数据</p><p><a href="/file/github_data_Cp7YimO8ih.xlsx" title="github_data.xlsx">github_data.xlsx</a></p><p><a href="/file/ratings_wfpL8zQ8L4.csv" title="ratings.csv">ratings.csv</a></p><p>使用faker库生成用户信息，werkzeug.security对密码进行加密</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> faker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> faker <span class="token keyword">import</span> Faker
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>security <span class="token keyword">import</span> generate_password_hash

fake <span class="token operator">=</span> Faker<span class="token punctuation">(</span>locale<span class="token operator">=</span><span class="token string">&#39;en-US&#39;</span><span class="token punctuation">)</span>
csv_file1 <span class="token operator">=</span> <span class="token string">&#39;user.csv&#39;</span>
csv_file2 <span class="token operator">=</span> <span class="token string">&#39;password.csv&#39;</span>
df1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>csv_file1<span class="token punctuation">)</span>
df2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>csv_file2<span class="token punctuation">)</span>

<span class="token keyword">for</span> rowId <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">611</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    real_password <span class="token operator">=</span> fake<span class="token punctuation">.</span>password<span class="token punctuation">(</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> fake<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span>
    email <span class="token operator">=</span> fake<span class="token punctuation">.</span>email<span class="token punctuation">(</span><span class="token punctuation">)</span>
    password <span class="token operator">=</span> generate_password_hash<span class="token punctuation">(</span>real_password<span class="token punctuation">)</span>
    df1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>rowId<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>name<span class="token punctuation">,</span>password<span class="token punctuation">,</span>email<span class="token punctuation">]</span>
    df2<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>rowId<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>name<span class="token punctuation">,</span>password<span class="token punctuation">,</span>email<span class="token punctuation">,</span>real_password<span class="token punctuation">]</span>

df1<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;user.csv&#39;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
df2<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;password.csv&#39;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-数据库数据存储" tabindex="-1"><a class="header-anchor" href="#_3-1-2-数据库数据存储" aria-hidden="true">#</a> 3.1.2 数据库数据存储</h4><p>首先建立数据库和数据表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> recommend<span class="token punctuation">;</span>
<span class="token keyword">use</span> recommend<span class="token punctuation">;</span>

<span class="token comment">-- 仓库</span>
<span class="token comment">-- Name  Link  Introduction  Language  Stars  Forks</span>
<span class="token comment">-- krahets/hello-algo  https://github.com/krahets/hello-algo  《Hello 算法》：动画图解、一键运行的数据结构与算法教程，支持 Java, C++, Python, Go, JS, TS, C#, Swift, Rust, Dart, Zig 等语言。  Java  33,255  3,924</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>github_info<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>link<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>introduction<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;introduction&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>language<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;language&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>stars<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;stars&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>forks<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;forks&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>

<span class="token comment">-- 评分</span>
<span class="token comment">-- userId,githubId,rating,timestamp</span>
<span class="token comment">-- 1,1,4,964982703</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>ratings<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>userId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>githubId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;githubId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>rating<span class="token punctuation">\`</span></span> <span class="token keyword">float</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;rating&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>timestamp<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>

<span class="token comment">-- 用户</span>
<span class="token comment">-- username,password,email</span>
<span class="token comment">-- Mary Swanson,431f87b87f999f5a502411b25c038a128fe86b7c,twright@example.net</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>username<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>
 
<span class="token comment">-- 收藏</span>
<span class="token comment">-- userId,githubId</span>
<span class="token comment">-- 1,1</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>collect<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>userId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>githubId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;githubId&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再利用pandas将已处理好的csv数据存入数据库（以用户信息为例）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> pymysql
<span class="token keyword">from</span> config <span class="token keyword">import</span> conn

<span class="token comment"># 读取表格信息</span>
filename <span class="token operator">=</span> <span class="token string">&#39;user.csv&#39;</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 获取一个mysql游标 Cursor</span>
cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>

query <span class="token operator">=</span> <span class="token string">&#39;insert into user(username,password,email) values (%s,%s,%s)&#39;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#id为自增字段，不需要添加</span>
    username <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    password <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
    email <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
    values <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span>
    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">,</span> values<span class="token punctuation">)</span>
    
cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数据导入成功&quot;</span><span class="token punctuation">)</span>
conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-网站前端设计与实现" tabindex="-1"><a class="header-anchor" href="#_3-2-网站前端设计与实现" aria-hidden="true">#</a> 3.2 网站前端设计与实现</h3><p><img src="`+u+'" alt=""></p><h3 id="_3-3-网站后端设计与实现" tabindex="-1"><a class="header-anchor" href="#_3-3-网站后端设计与实现" aria-hidden="true">#</a> 3.3 网站后端设计与实现</h3><p><img src="'+r+'" alt=""></p><p>根据功能图，设计用户信息、仓库信息、评分信息、收藏信息四个数据表，由于仓库介绍中含表情，需要使用utf8mb4格式。</p><table><thead><tr><th>用户信息表(user)</th><th></th><th></th></tr></thead><tbody><tr><td>username</td><td>password</td><td>email</td></tr></tbody></table><table><thead><tr><th>仓库信息表(github_info)</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>name</td><td>link</td><td>introduction</td><td>language</td><td>stars</td><td>forks</td></tr></tbody></table><table><thead><tr><th>评分信息表(ratings)</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>userId</td><td>githubId</td><td>rating</td><td>timestamp</td></tr></tbody></table><table><thead><tr><th>收藏信息表(collect)</th><th></th></tr></thead><tbody><tr><td>userId</td><td>githubId</td></tr></tbody></table><h3 id="_3-4-推荐算法设计与实现" tabindex="-1"><a class="header-anchor" href="#_3-4-推荐算法设计与实现" aria-hidden="true">#</a> 3.4 推荐算法设计与实现</h3><p>利用ALS协同过滤算法，对评分数据进行分析，可以得出用户与用户、仓库与仓库的相似度。</p><p>由于新用户评分变化快，导致用户与用户的相似度变化快，“猜你喜欢”的结果变化快，所以该部分采用在线调用算法实现；而所有用户的评分变化较慢，导致仓库与仓库的相似度变化慢，“相似仓库”的结果变化慢，所以该部分采用离线方式，每天定时调用算法程序更新item_embedding，线上只需查询item_embedding.csv进行近邻搜索即可。</p><h4 id="_3-4-1-als协同过滤算法-离线定时部分" tabindex="-1"><a class="header-anchor" href="#_3-4-1-als协同过滤算法-离线定时部分" aria-hidden="true">#</a> 3.4.1 ALS协同过滤算法（离线定时部分）</h4><p><img src="'+k+`" alt=""></p><p>在app.py中，利用Flask APScheduler在5002端口执行定时任务（每日0点），用交叉验证方式训练pyflask的ALS模型，最后将pyflask.ml.ALS类的itemFactors（仓库相似度）转化为pandas的dataframe提取至csv文件中，方便在线部分查询。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> flask_apscheduler <span class="token keyword">import</span> APScheduler
<span class="token keyword">from</span> gevent <span class="token keyword">import</span> pywsgi <span class="token comment"># pywsgi: flask开发环境转生产环境</span>
<span class="token keyword">import</span> datetime
<span class="token keyword">import</span> pymysql
<span class="token keyword">from</span> config <span class="token keyword">import</span> conn
<span class="token keyword">import</span> csv
<span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>sql <span class="token keyword">import</span> SparkSession
<span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>ml<span class="token punctuation">.</span>evaluation <span class="token keyword">import</span> RegressionEvaluator
<span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>ml<span class="token punctuation">.</span>recommendation <span class="token keyword">import</span> ALS
<span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>ml<span class="token punctuation">.</span>tuning <span class="token keyword">import</span> ParamGridBuilder<span class="token punctuation">,</span> CrossValidator
<span class="token keyword">from</span> pyspark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>functions <span class="token keyword">import</span> col



<span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    SCHEDULER_API_ENABLED <span class="token operator">=</span> <span class="token boolean">True</span>


scheduler <span class="token operator">=</span> APScheduler<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@scheduler<span class="token punctuation">.</span>task</span><span class="token punctuation">(</span><span class="token string">&#39;cron&#39;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&#39;do_job&#39;</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> hour<span class="token operator">=</span><span class="token string">&#39;00&#39;</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token string">&#39;00&#39;</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token string">&#39;00&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sql <span class="token operator">=</span> <span class="token string">&#39;select * from ratings&#39;</span>
    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
    data <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>
    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    csv_file <span class="token operator">=</span> <span class="token string">&#39;lastest_ratings.csv&#39;</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
    csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> line <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token string">&#39;userId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;githubId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;rating&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数据导出成功&quot;</span><span class="token punctuation">)</span>


    <span class="token comment"># 创建 Spark 会话</span>
    spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">&quot;ALS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 读取数据</span>
    data <span class="token operator">=</span> spark<span class="token punctuation">.</span>read<span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">&quot;file:///root/html/scheduled/lastest_ratings.csv&quot;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> inferSchema<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token comment"># 数据预处理</span>
    <span class="token comment"># 去除空值</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 将字符串类型的列转换为数值类型</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;integer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;integer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;float&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 划分训练集和测试集</span>
    <span class="token punctuation">(</span>training<span class="token punctuation">,</span> test<span class="token punctuation">)</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>randomSplit<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建 ALS 模型</span>
    als <span class="token operator">=</span> ALS<span class="token punctuation">(</span>userCol<span class="token operator">=</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> itemCol<span class="token operator">=</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span> ratingCol<span class="token operator">=</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> coldStartStrategy<span class="token operator">=</span><span class="token string">&quot;drop&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 定义参数网格</span>
    paramGrid <span class="token operator">=</span> ParamGridBuilder<span class="token punctuation">(</span><span class="token punctuation">)</span> \\
        <span class="token punctuation">.</span>addGrid<span class="token punctuation">(</span>als<span class="token punctuation">.</span>rank<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \\
        <span class="token punctuation">.</span>addGrid<span class="token punctuation">(</span>als<span class="token punctuation">.</span>regParam<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \\
        <span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建交叉验证器</span>
    crossval <span class="token operator">=</span> CrossValidator<span class="token punctuation">(</span>estimator<span class="token operator">=</span>als<span class="token punctuation">,</span>
                            estimatorParamMaps<span class="token operator">=</span>paramGrid<span class="token punctuation">,</span>
                            evaluator<span class="token operator">=</span>RegressionEvaluator<span class="token punctuation">(</span>metricName<span class="token operator">=</span><span class="token string">&quot;rmse&quot;</span><span class="token punctuation">,</span> labelCol<span class="token operator">=</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> predictionCol<span class="token operator">=</span><span class="token string">&quot;prediction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            numFolds<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token comment"># 训练 ALS 模型</span>
    model <span class="token operator">=</span> crossval<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>training<span class="token punctuation">)</span>
    bestModel <span class="token operator">=</span> model<span class="token punctuation">.</span>bestModel
    <span class="token comment"># 在测试数据上进行预测</span>
    predictions <span class="token operator">=</span> bestModel<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>test<span class="token punctuation">)</span>
    <span class="token comment"># 计算均方根误差</span>
    evaluator <span class="token operator">=</span> RegressionEvaluator<span class="token punctuation">(</span>metricName<span class="token operator">=</span><span class="token string">&quot;rmse&quot;</span><span class="token punctuation">,</span> labelCol<span class="token operator">=</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> predictionCol<span class="token operator">=</span><span class="token string">&quot;prediction&quot;</span><span class="token punctuation">)</span>
    rmse <span class="token operator">=</span> evaluator<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>predictions<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Root-mean-square error = &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rmse<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 导出embedding</span>
    df_item <span class="token operator">=</span> bestModel<span class="token punctuation">.</span>itemFactors<span class="token punctuation">.</span>toPandas<span class="token punctuation">(</span><span class="token punctuation">)</span>
    df_item<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;item_embedding.csv&#39;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>

    df_user <span class="token operator">=</span> bestModel<span class="token punctuation">.</span>userFactors<span class="token punctuation">.</span>toPandas<span class="token punctuation">(</span><span class="token punctuation">)</span>
    df_user<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;user_embedding.csv&#39;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>

    spark<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;embedding导出成功&quot;</span><span class="token punctuation">)</span>



<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>from_object<span class="token punctuation">(</span>Config<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># it is also possible to enable the API directly</span>
    <span class="token comment"># scheduler.api_enabled = True</span>
    scheduler<span class="token punctuation">.</span>init_app<span class="token punctuation">(</span>app<span class="token punctuation">)</span>
    scheduler<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># app.run(port=5002)</span>
    server <span class="token operator">=</span> pywsgi<span class="token punctuation">.</span>WSGIServer<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token number">5002</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-2-als协同过滤算法-在线部分" tabindex="-1"><a class="header-anchor" href="#_3-4-2-als协同过滤算法-在线部分" aria-hidden="true">#</a> 3.4.2 ALS协同过滤算法（在线部分）</h4><p>在models.py中定义EmbeddingModel类，方便在线部分操作（本次爬取的数据量不大，加载到内存中速度更快）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">EmbeddingManager</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fpath<span class="token punctuation">,</span> key_name<span class="token punctuation">,</span> value_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># pandas.dataframe</span>
        self<span class="token punctuation">.</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span>
        <span class="token comment"># 将文件中的embedding加载到内存</span>
        self<span class="token punctuation">.</span>dict_embedding <span class="token operator">=</span> self<span class="token punctuation">.</span>load_embedding_to_dict<span class="token punctuation">(</span>key_name<span class="token punctuation">,</span> value_name<span class="token punctuation">)</span>
        <span class="token comment"># 在faiss建立索引</span>
        self<span class="token punctuation">.</span>faiss_index <span class="token operator">=</span> self<span class="token punctuation">.</span>load_embedding_to_faiss<span class="token punctuation">(</span>key_name<span class="token punctuation">,</span> value_name<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">get_embedding</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>dict_embedding<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">load_embedding_to_dict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key_name<span class="token punctuation">,</span> value_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span>key_name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span>value_name<span class="token punctuation">]</span>
            <span class="token keyword">for</span> index<span class="token punctuation">,</span>row <span class="token keyword">in</span> self<span class="token punctuation">.</span>df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

    <span class="token keyword">def</span> <span class="token function">load_embedding_to_faiss</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>key_name<span class="token punctuation">,</span> value_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># id列表</span>
        ids <span class="token operator">=</span> self<span class="token punctuation">.</span>df<span class="token punctuation">[</span>key_name<span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span>
        <span class="token comment"># 二维embedding</span>
        datas <span class="token operator">=</span> <span class="token punctuation">[</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> self<span class="token punctuation">.</span>df<span class="token punctuation">[</span>value_name<span class="token punctuation">]</span><span class="token punctuation">]</span>
        datas <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
        <span class="token comment"># 维度</span>
        dimension <span class="token operator">=</span> datas<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token comment"># 创建faiss索引</span>
        index <span class="token operator">=</span> faiss<span class="token punctuation">.</span>IndexFlatL2<span class="token punctuation">(</span>dimension<span class="token punctuation">)</span>
        index2 <span class="token operator">=</span> faiss<span class="token punctuation">.</span>IndexIDMap<span class="token punctuation">(</span>index<span class="token punctuation">)</span>
        index2<span class="token punctuation">.</span>add_with_ids<span class="token punctuation">(</span>datas<span class="token punctuation">,</span> ids<span class="token punctuation">)</span>
        <span class="token keyword">return</span> index2

    <span class="token keyword">def</span> <span class="token function">search_ids_by_embedding</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> embedding_str<span class="token punctuation">,</span> topk<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;实现近邻搜索&quot;&quot;&quot;</span>
        <span class="token builtin">input</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>embedding_str<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token builtin">input</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
        D<span class="token punctuation">,</span>I <span class="token operator">=</span> self<span class="token punctuation">.</span>faiss_index<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span>topk<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">list</span><span class="token punctuation">(</span>I<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仓库详情页“相似仓库推荐”：在线调用近邻搜索，推荐最相似的11个仓库，再删去最相似的第一个（自身）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bp <span class="token operator">=</span> Blueprint<span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> url_prefix<span class="token operator">=</span><span class="token string">&quot;/content&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@bp<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    githubId <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>

    mgr_github_embedding <span class="token operator">=</span> EmbeddingManager<span class="token punctuation">(</span><span class="token string">&quot;/root/html/scheduled/item_embedding.csv&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">)</span>
    github_embedding <span class="token operator">=</span> mgr_github_embedding<span class="token punctuation">.</span>get_embedding<span class="token punctuation">(</span>githubId<span class="token punctuation">)</span>
    github_ids <span class="token operator">=</span> mgr_github_embedding<span class="token punctuation">.</span>search_ids_by_embedding<span class="token punctuation">(</span>github_embedding<span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>github_ids<span class="token punctuation">)</span>

    recommend <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        github1 <span class="token operator">=</span> GithubModel<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span>github_ids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        recommend<span class="token punctuation">.</span>append<span class="token punctuation">(</span>github1<span class="token punctuation">)</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&quot;content.html&quot;</span><span class="token punctuation">,</span> recommend <span class="token operator">=</span> recommend<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主页“猜你喜欢”：在线从mysql数据库中查询所有评分数据，训练ALS模型（为节省时间不使用交叉验证，但因为服务器非专用算法服务器，仍需运行30秒左右）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bp <span class="token operator">=</span> Blueprint<span class="token punctuation">(</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> url_prefix<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@bp<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    items_github <span class="token operator">=</span> GithubModel<span class="token punctuation">.</span>query<span class="token punctuation">.</span>order_by<span class="token punctuation">(</span>GithubModel<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">.</span>desc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>limit<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> session<span class="token punctuation">:</span>
        userId <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span>items_github<span class="token operator">=</span>items_github<span class="token punctuation">)</span>
    recommends <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    ratings <span class="token operator">=</span> RatingModel<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>userId<span class="token operator">=</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> ratings<span class="token punctuation">:</span>
        <span class="token comment"># 建立 MySQL 连接</span>
        conn1 <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>
            host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
            user<span class="token operator">=</span><span class="token string">&#39;mysql_username&#39;</span><span class="token punctuation">,</span>
            password<span class="token operator">=</span><span class="token string">&#39;mysql_password&#39;</span><span class="token punctuation">,</span>
            db<span class="token operator">=</span><span class="token string">&#39;recommend&#39;</span><span class="token punctuation">,</span>
            charset<span class="token operator">=</span><span class="token string">&#39;utf8mb4&#39;</span><span class="token punctuation">,</span>
            cursorclass<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor
        <span class="token punctuation">)</span>
        cursor1 <span class="token operator">=</span> conn1<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
        sql <span class="token operator">=</span> <span class="token string">&#39;select * from ratings&#39;</span>
        cursor1<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
        data <span class="token operator">=</span> cursor1<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>
        conn1<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

        csv_file <span class="token operator">=</span> <span class="token string">&#39;/root/html/scheduled/lastest_ratings.csv&#39;</span>
        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> data<span class="token punctuation">:</span>
            csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token string">&#39;userId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;githubId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;rating&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>line<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数据导出成功&quot;</span><span class="token punctuation">)</span>

        <span class="token comment"># 创建 Spark 会话</span>
        spark <span class="token operator">=</span> SparkSession<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>appName<span class="token punctuation">(</span><span class="token string">&quot;ALS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getOrCreate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 读取数据</span>
        data <span class="token operator">=</span> spark<span class="token punctuation">.</span>read<span class="token punctuation">.</span>csv<span class="token punctuation">(</span><span class="token string">&quot;file:///root/html/scheduled/lastest_ratings.csv&quot;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> inferSchema<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token comment"># 数据预处理</span>
        <span class="token comment"># 去除空值</span>
        data <span class="token operator">=</span> data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 将字符串类型的列转换为数值类型</span>
        data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;integer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;integer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> data<span class="token punctuation">.</span>withColumn<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> col<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token string">&quot;float&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 创建 ALS 模型</span>
        als <span class="token operator">=</span> ALS<span class="token punctuation">(</span>userCol<span class="token operator">=</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> itemCol<span class="token operator">=</span><span class="token string">&quot;githubId&quot;</span><span class="token punctuation">,</span> ratingCol<span class="token operator">=</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> rank<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> regParam<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span>
        <span class="token comment"># 训练 ALS 模型</span>
        model <span class="token operator">=</span> als<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

        <span class="token comment"># 对特定用户进行推荐</span>
        userRecs <span class="token operator">=</span> model<span class="token punctuation">.</span>recommendForUserSubset<span class="token punctuation">(</span>spark<span class="token punctuation">.</span>createDataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toDF<span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
        row_recommends <span class="token operator">=</span> userRecs<span class="token punctuation">[</span><span class="token string">&quot;recommendations&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> recommend <span class="token keyword">in</span> row_recommends<span class="token punctuation">:</span>
            recommends<span class="token punctuation">.</span>append<span class="token punctuation">(</span>GithubModel<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>recommend<span class="token punctuation">[</span><span class="token string">&#39;githubId&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        items_github <span class="token operator">=</span> recommends        
        spark<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span>items_github<span class="token operator">=</span>items_github<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、用户手册" tabindex="-1"><a class="header-anchor" href="#四、用户手册" aria-hidden="true">#</a> 四、用户手册</h2><h3 id="_4-1-项目简介" tabindex="-1"><a class="header-anchor" href="#_4-1-项目简介" aria-hidden="true">#</a> 4.1 项目简介</h3><p>这是一款基于flask和pyspark的个性化Github仓库推荐系统。</p><p>在该系统中，您可以通过登陆注册后进入系统，通过语言分类查询自己喜欢的Github仓库，对仓库进行评分、收藏，方便在个人主页再次查看您喜欢的仓库。</p><p>此外，系统实现了基于交替最小二乘的协同过滤推荐算法。在首页为您推荐9个与您兴趣相关的优质Github仓库信息，还会在仓库详情页向您推荐10个与当前Github仓库相关的仓库。</p><p>总之，该系统能够为您提供个性化、多样化的Github仓库推荐服务，帮助您快速找到自己喜欢的Github仓库，提高体验，实现更好的知识传递和分享。</p><h3 id="_4-2-界面展示及功能介绍" tabindex="-1"><a class="header-anchor" href="#_4-2-界面展示及功能介绍" aria-hidden="true">#</a> 4.2 界面展示及功能介绍</h3><h4 id="_4-2-1-首页" tabindex="-1"><a class="header-anchor" href="#_4-2-1-首页" aria-hidden="true">#</a> 4.2.1 首页</h4><p><img src="`+d+'" alt=""></p><p><img src="'+m+'" alt=""></p><ul><li>主页是我们平台的起始页面，展示了每日推荐内容。根据用户的收藏和评分情况，我们生成个性化的每日推荐，以帮助用户发现感兴趣的仓库和项目。</li><li>用户可以通过主页浏览推荐内容，并点击进入仓库详情页了解更多信息。</li></ul><h4 id="_4-2-2-登录注册页面" tabindex="-1"><a class="header-anchor" href="#_4-2-2-登录注册页面" aria-hidden="true">#</a> 4.2.2 登录注册页面</h4><p><img src="'+v+'" alt=""></p><p><img src="'+b+'" alt=""></p><ul><li>登录页面提供用户登录平台的入口。用户可以输入他们的email地址和密码登录到账户。</li><li>注册页面允许新用户创建一个新的账户。用户需要提供必要的信息并选择一个唯一的用户名和安全的密码来注册账户</li></ul><h4 id="_4-2-3-仓库分类集合页面" tabindex="-1"><a class="header-anchor" href="#_4-2-3-仓库分类集合页面" aria-hidden="true">#</a> 4.2.3 仓库分类集合页面</h4><p><img src="'+g+'" alt=""></p><p><img src="'+h+'" alt=""></p><ul><li>这个页面根据仓库的编程语言对仓库进行了分类展示。用户可以在该页面浏览各种编程语言的仓库，以便找到他们感兴趣的特定语言的项目。</li><li>每个分类可能包含多个相关的仓库，用户可以点击进入仓库详情页了解更多信息。</li></ul><h4 id="_4-2-4-仓库详情页面" tabindex="-1"><a class="header-anchor" href="#_4-2-4-仓库详情页面" aria-hidden="true">#</a> 4.2.4 仓库详情页面</h4><p><img src="'+y+'" alt=""></p><p><img src="'+f+'" alt=""></p><ul><li>仓库详情页展示了该仓库的详细信息。可以在该页中找到仓库的名称、描述、链接、star数目和fork数目等相关信息。</li><li>此外，该页面还提供了类似仓库的推荐（根据推荐算法生成），以便用发现与当前仓库相似或相关的其他仓库。</li></ul><h4 id="_4-2-5-用户个人主页" tabindex="-1"><a class="header-anchor" href="#_4-2-5-用户个人主页" aria-hidden="true">#</a> 4.2.5 用户个人主页</h4><p><img src="'+w+'" alt=""></p><p><img src="'+_+'" alt=""></p><ul><li>用户个人主页是展示用户个人信息和活动的页面，其中包含用户收藏和评价过的仓库。</li><li>用户可以通过个人主页访问收藏的仓库和评价过的仓库，以查看和管理他们的收藏和评价记录。</li></ul><h3 id="_4-3-推荐相关注意事项" tabindex="-1"><a class="header-anchor" href="#_4-3-推荐相关注意事项" aria-hidden="true">#</a> 4.3 推荐相关注意事项</h3><h4 id="_4-3-1-主页-猜你喜欢-说明" tabindex="-1"><a class="header-anchor" href="#_4-3-1-主页-猜你喜欢-说明" aria-hidden="true">#</a> 4.3.1 主页“猜你喜欢”说明</h4><p>未评分用户访问主页时，得到的“猜你喜欢”结果是从仓库中随机选取的9个仓库。</p><p>已评分用户访问主页时，会调用ALS算法，根据评分数据为用户推荐可能感兴趣的9个仓库。</p><h4 id="_4-3-2-仓库详情页-相似仓库推荐-说明" tabindex="-1"><a class="header-anchor" href="#_4-3-2-仓库详情页-相似仓库推荐-说明" aria-hidden="true">#</a> 4.3.2 仓库详情页“相似仓库推荐”说明</h4><p>根据所有用户的评分信息推测仓库相似度，为用户推荐10个相似的仓库。</p><p>仓库相似度将在每天的零点调用ALS算法，进行更新。</p><h2 id="五、系统安装说明" tabindex="-1"><a class="header-anchor" href="#五、系统安装说明" aria-hidden="true">#</a> 五、系统安装说明</h2>',74),L={href:"https://www.flexclip.com/cn/share/4769541fa4c759c9cf86e96fcdc6240a193c24c.html",title:"https://www.flexclip.com/cn/share/4769541fa4c759c9cf86e96fcdc6240a193c24c.html",target:"_blank",rel:"noopener noreferrer"},M=p(`<h3 id="_5-1-项目结构" tabindex="-1"><a class="header-anchor" href="#_5-1-项目结构" aria-hidden="true">#</a> 5.1 项目结构</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@xxxxxxx:~/Github-recommend-system-main$ tree
<span class="token builtin class-name">.</span>
├── data <span class="token comment"># 项目启动前操作</span>
│   ├── data <span class="token comment"># 数据预处理</span>
│   └── mysql <span class="token comment"># 建数据表、数据存入数据库</span>
└── html <span class="token comment"># 项目代码</span>
    ├── app.py <span class="token comment"># flask在线服务</span>
    ├── blueprints <span class="token comment"># 后端蓝图</span>
    ├── config.py <span class="token comment"># 数据库配置1</span>
    ├── exts.py <span class="token comment"># 数据库配置2</span>
    ├── models.py <span class="token comment"># 数据表对应class</span>
    ├── scheduled <span class="token comment"># als定时任务</span>
    │   ├── als_model <span class="token comment"># als模型</span>
    │   ├── als.py <span class="token comment"># als算法</span>
    │   ├── app.py <span class="token comment"># flask在线服务</span>
    │   └── config.py <span class="token comment"># 数据库配置</span>
    ├── static <span class="token comment"># 静态文件</span>
    └── template <span class="token comment"># 前端</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-环境配置" tabindex="-1"><a class="header-anchor" href="#_5-2-环境配置" aria-hidden="true">#</a> 5.2 环境配置</h3><p>注：本项目在ubuntu20.04云服务器上测试通过</p><p>requirements.txt</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>faker
pandas
scikit-learn
pyspark
flask
pymysql
openpyxl
flask-login
gevent
flask-sqlalchemy
flask-wtf
email-validator
PyEmail
flask_apscheduler
faiss-gpu

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> upgrade
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3 python-is-python3 upzip  netcat tmux openjdk-8-jdk apache2 mysql-server <span class="token function">screen</span>
pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-8-openjdk-amd64 <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-启动项目" tabindex="-1"><a class="header-anchor" href="#_5-3-启动项目" aria-hidden="true">#</a> 5.3 启动项目</h3><ol><li><p>打开防火墙的5000端口(flask在线服务)</p></li><li><p>修改配置信息</p><p>mysql数据库本地账号密码信息查询</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cat</span> /etc/mysql/debian.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将项目中的config文件均修改为自己的数据库账号密码</p></li><li><p>创建数据库、数据表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 新建数据库</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> recommend<span class="token punctuation">;</span>

<span class="token comment">-- 仓库</span>
<span class="token comment">-- Name  Link  Introduction  Language  Stars  Forks</span>
<span class="token comment">-- krahets/hello-algo  https://github.com/krahets/hello-algo  《Hello 算法》：动画图解、一键运行的数据结构与算法教程，支持 Java, C++, Python, Go, JS, TS, C#, Swift, Rust, Dart, Zig 等语言。  Java  33,255  3,924</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>github_info<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>link<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>introduction<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;introduction&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>language<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;language&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>stars<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;stars&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>forks<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;forks&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>

<span class="token comment">-- 评分</span>
<span class="token comment">-- userId,githubId,rating,timestamp</span>
<span class="token comment">-- 1,1,4,964982703</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>ratings<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>userId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>githubId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;githubId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>rating<span class="token punctuation">\`</span></span> <span class="token keyword">float</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;rating&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>timestamp<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>

<span class="token comment">-- 用户</span>
<span class="token comment">-- username,password,email</span>
<span class="token comment">-- Mary Swanson,431f87b87f999f5a502411b25c038a128fe86b7c,twright@example.net</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>username<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>
 
<span class="token comment">-- 收藏</span>
<span class="token comment">-- userId,githubId</span>
<span class="token comment">-- 1,1</span>
 <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>collect<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>userId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>githubId<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;githubId&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>用户数据生成</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> data/data
python test_user.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>录入数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> data/mysql
python xlsx2mysql.py csv2mysql.py csv2mysql_rating.py

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行一次ALS算法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> html/scheduled
python als.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动flask服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> html
python app.py
<span class="token builtin class-name">cd</span> html/scheduled
python app.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>此时浏览器访问公网ip:5000即可看到在线网站服务</p>`,10);function S(C,A){const a=o("ExternalLinkIcon");return c(),i("div",null,[N,n("p",null,[s("收集Github仓库列表数据，包括标题、简介、链接、Stars、Forks、Language "),n("a",E,[s("https://ossinsight.io/"),t(a)])]),n("p",null,[s("收集用户对Github仓库的评分 "),n("a",T,[s("https://hellogithub.com/"),t(a)])]),n("p",null,[n("a",I,[s("https://github.com/NaiboWang/EasySpider"),t(a)])]),x,n("p",null,[s("介绍视频： "),n("a",L,[s("https://www.flexclip.com/cn/share/4769541fa4c759c9cf86e96fcdc6240a193c24c.html"),t(a)])]),M])}const U=e(q,[["render",S],["__file","recommend.html.vue"]]);export{U as default};
