import{_ as o,r as c,o as l,c as i,a as n,b as s,d as e,e as p}from"./app-FwAWHyPI.js";const u="/image/944bbcf50112fbf4f5ac2ac0d7ef521_8DnVCikbwE.png",r="/image/15c41e713fda81a3d0fbe18c64a3619_txHsCXN8is.png",d="/image/74ee6c5eceb957be72e18ea1619250d_o6M0VApWAh.png",k="/image/image_DrudP-46HV.png",v="/image/image_s3qugh5vx2.png",t="/image/image_LTBt3VVcVj.png",m="/image/fdd34aa9637c23152b727b2e8a38fe4_T-Ehl_-Eaz.png",b="/image/6fc96c84c27f38e38d3f4edcd84c76b_cvw8OR1Na_.png",h="/image/image_1uY2levIO6.png",g="/image/image_-HjRyLM9mJ.png",y={},f=p('<h2 id="项目描述" tabindex="-1"><a class="header-anchor" href="#项目描述" aria-hidden="true">#</a> 项目描述</h2><h3 id="技术路线" tabindex="-1"><a class="header-anchor" href="#技术路线" aria-hidden="true">#</a> 技术路线</h3><p>部署：Apache2 Gevent</p><p>数据库：MySQL Flask</p><p>前端：html+css+js</p><p>地图：leafLet</p><p>物联网：华为云IotDA MQTT协议</p><p>低代码：华为云Astro</p><h3 id="答辩准备" tabindex="-1"><a class="header-anchor" href="#答辩准备" aria-hidden="true">#</a> 答辩准备</h3><p>设计AI劝导员，辅助交警工作。</p><p>5分钟演示。重点突出海思的应用。</p><p>海思3861：物联网、通信</p><p>海思3516：AI检测、播放语音、控制亮灯</p><p>服务器、网页、APP</p><p>背景</p><p>搭建好的场景+部件逐个讲解</p><p>实物演示（APP同步共享屏幕）+web&amp;服务器（共享屏幕）</p><p>语音播报问题：专用耳机？</p><h2 id="🤖开发记录" tabindex="-1"><a class="header-anchor" href="#🤖开发记录" aria-hidden="true">#</a> 🤖开发记录</h2><h3 id="astro业务大屏" tabindex="-1"><a class="header-anchor" href="#astro业务大屏" aria-hidden="true">#</a> Astro业务大屏</h3>',20),_={href:"https://support.huaweicloud.com/usermanualcanvas-astrozero/astrozero_05_6000.html",title:"图解Astro大屏应用_Astro轻应用 AstroZero_用户指南（Astro大屏应用）_华为云 (huaweicloud.com)",target:"_blank",rel:"noopener noreferrer"},w=p(`<p>MySQL一条sql语句查出表中不同字段（列）的数量</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span> <span class="token keyword">DISTINCT</span> address <span class="token punctuation">)</span> 路口数量 <span class="token keyword">from</span> road_record
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+u+`" alt=""></p><p>MySQL 统计同一字段不同值的个数</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> address<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> num <span class="token keyword">FROM</span> road_record <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> address<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+r+`" alt=""></p><p>MySQL去重同一列的重复数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">distinct</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span> <span class="token keyword">from</span> road_record
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+d+`" alt=""></p><p>MySQL倒序查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> color <span class="token keyword">from</span> light_color <span class="token keyword">order</span> <span class="token keyword">by</span> color_id <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>时间处理</p>`,12),T={href:"https://blog.csdn.net/hu1010037197/article/details/115391335",title:"(4条消息) MySQL日期时间操作函数（挺全的）_mysql日期函数_HaleyTiger的博客-CSDN博客",target:"_blank",rel:"noopener noreferrer"},E=p(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> EXTRACT<span class="token punctuation">(</span><span class="token keyword">DAY</span> <span class="token keyword">FROM</span> <span class="token keyword">time</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> num <span class="token keyword">from</span> road_record <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> EXTRACT<span class="token punctuation">(</span><span class="token keyword">DAY</span> <span class="token keyword">FROM</span> <span class="token keyword">time</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="地图补充类似热力图功能-违规记录越多-区域颜色越深" tabindex="-1"><a class="header-anchor" href="#地图补充类似热力图功能-违规记录越多-区域颜色越深" aria-hidden="true">#</a> 地图补充类似热力图功能（违规记录越多 区域颜色越深）</h3>`,2),q={href:"https://leafletjs.com/examples/choropleth/",title:" Interactive Choropleth Map - Leaflet - a JavaScript library for interactive maps  https://leafletjs.com/examples/choropleth/",target:"_blank",rel:"noopener noreferrer"},N=p('<p><img src="'+k+'" alt=""></p><p>最终效果</p><p><img src="'+v+'" alt=""></p><h3 id="展示红绿灯状态-亮灯" tabindex="-1"><a class="header-anchor" href="#展示红绿灯状态-亮灯" aria-hidden="true">#</a> 展示红绿灯状态（亮灯）</h3><ol><li>板子上传数据至物联网云平台，物联网云平台转发信息至服务器</li><li>服务器接收数据，插入数据库</li><li>网页获取数据库最新信息</li></ol><h4 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h4><p>创建数据表命令</p><p><img src="'+t+'" alt=""></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>light<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token comment">// 未使用</span>\n    <span class="token identifier"><span class="token punctuation">`</span>light_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>state<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>second<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>light_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n \n <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>light_color<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>color_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>color<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>color_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据表列表</p><p><img src="'+m+'" alt=""></p><p><img src="'+b+`" alt=""></p><h4 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器" aria-hidden="true">#</a> 服务器</h4><p><code>client.on(&#39;message&#39;, function (topic, message) { }</code></p><p><strong>服务器</strong>持续接收<strong>物联网云平台</strong>命令，接收后立即执行函数，将数据插入mysql→traffic→light</p><p>需检验：message的解析</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 命令下发响应(接收红绿灯状态)</span>
client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">topic<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;received message is &#39;</span> <span class="token operator">+</span> message<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> jsonMsg <span class="token operator">=</span> responseReq<span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token function">getResponseTopic</span><span class="token punctuation">(</span>topic<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> jsonMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;responsed message is &#39;</span> <span class="token operator">+</span> jsonMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>



    <span class="token comment">// 根据message解析出state（红绿灯状态）和second（状态剩余秒数）</span>
    <span class="token keyword">var</span> paras <span class="token operator">=</span> message<span class="token punctuation">[</span><span class="token string">&#39;paras&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">var</span> state <span class="token operator">=</span> paras<span class="token punctuation">[</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">var</span> second <span class="token operator">=</span> paras<span class="token punctuation">[</span><span class="token string">&#39;second&#39;</span><span class="token punctuation">]</span>


    pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> connection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> addSql <span class="token operator">=</span> <span class="token string">&#39;INSERT INTO light_record(state, second) VALUES(?,?)&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> addSqlParams <span class="token operator">=</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> second<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//增</span>
        connection<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>addSql<span class="token punctuation">,</span> addSqlParams<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[INSERT ERROR] - &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;--------------------------INSERT----------------------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//console.log(&#39;INSERT ID:&#39;,result.insertId);        </span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;INSERT ID:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-----------------------------------------------------------------\\n\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何添加同时带端口和路径的地址" tabindex="-1"><a class="header-anchor" href="#如何添加同时带端口和路径的地址" aria-hidden="true">#</a> 如何添加同时带端口和路径的地址？</h3>`,18),R={href:"http://123.60.185.153/map.html",title:"http://123.60.185.153:8089",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template <span class="token punctuation">,</span>jsonify<span class="token punctuation">,</span> make_response
<span class="token keyword">from</span> gevent <span class="token keyword">import</span> pywsgi <span class="token comment"># pywsgi: flask开发环境转生产环境</span>

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">&#39;JSON_SORT_KEYS&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>
app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">&#39;JSONIFY_MIMETYPE&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;application/json&#39;</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token comment"># app.run(host=&#39;0.0.0.0&#39;, port=8089)</span>
    server <span class="token operator">=</span> pywsgi<span class="token punctuation">.</span>WSGIServer<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token number">8089</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),S={href:"http://123.60.185.153/map.html",title:"http://123.60.185.153:8089/",target:"_blank",rel:"noopener noreferrer"},A=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&lt;address&gt;/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># 查询数据</span>
  results <span class="token operator">=</span> query_db<span class="token punctuation">(</span><span class="token string">&#39;SELECT time FROM road_record WHERE address = &quot;&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot;;&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 统计每个时间段（四个小时）的记录数</span>
  counts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> row <span class="token keyword">in</span> results<span class="token punctuation">:</span>
    time <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    hour <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">4</span>
    data <span class="token operator">=</span> time<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    key <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>hour<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:00--</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token punctuation">(</span>hour<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:00&#39;</span></span>
    counts<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token comment"># 将数据转换为字典列表</span>
  data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> key <span class="token punctuation">,</span> count <span class="token keyword">in</span> counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string">&#39;time&#39;</span><span class="token punctuation">:</span>key <span class="token punctuation">,</span>
      <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span>count
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># if not data:</span>
<span class="token comment">#   return &quot;No data acailable&quot;</span>
<span class="token comment"># 渲染模板</span>
  <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I={href:"http://123.60.185.153/map.html",title:"http://123.60.185.153:8089/",target:"_blank",rel:"noopener noreferrer"},L=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&lt;address&gt;/data/&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># @app.route(&#39;/data&#39;)</span>
<span class="token keyword">def</span> <span class="token function">data</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># def data():</span>
  <span class="token comment"># 查询数据</span>
  <span class="token comment"># results = query_db(&quot;SELECT time FROM road;&quot;)</span>
  results <span class="token operator">=</span> query_db<span class="token punctuation">(</span><span class="token string">&#39;SELECT time FROM road_record WHERE address = &quot;&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot;;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment"># 统计每个时间段（四个小时）的记录数</span>
  counts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> row <span class="token keyword">in</span> results<span class="token punctuation">:</span>
    time <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    hour <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">4</span>
    data <span class="token operator">=</span> time<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    key <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>hour<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:00--</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token punctuation">(</span>hour<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">:00&#39;</span></span>
    counts<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token comment"># 将数据转换为字典列表</span>
  data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> key <span class="token punctuation">,</span> count <span class="token keyword">in</span> counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string">&#39;time&#39;</span><span class="token punctuation">:</span>key <span class="token punctuation">,</span>
      <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span>count
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  response <span class="token operator">=</span> make_response<span class="token punctuation">(</span>jsonify<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
      
  <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;No data acailable&quot;</span>
  <span class="token comment"># response.headers[&#39;Content-Type&#39;]=&#39;application/json&#39;</span>
  <span class="token keyword">return</span> response
  <span class="token comment"># return render_template(&#39;index.html&#39;, data=data)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何分辨路径" tabindex="-1"><a class="header-anchor" href="#如何分辨路径" aria-hidden="true">#</a> 如何分辨路径？</h3><p>在js中利用window.location.href获得当前路径，split方法分离出当前address</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
<span class="token operator">//</span> url <span class="token operator">=</span> <span class="token string">&quot;http://123.60.185.153:8089/Xiangan%20Street/&quot;</span>
var address <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token operator">//</span> address <span class="token operator">=</span> <span class="token string">&quot;Xiangan%20Street&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何将当前路径与数据库查询接口结合-select-street-name" tabindex="-1"><a class="header-anchor" href="#如何将当前路径与数据库查询接口结合-select-street-name" aria-hidden="true">#</a> 如何将当前路径与数据库查询接口结合？（select street_name）</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>results <span class="token operator">=</span> query_db<span class="token punctuation">(</span><span class="token string">&#39;SELECT time FROM road_record WHERE address = &quot;&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot;;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="🐞debug记录" tabindex="-1"><a class="header-anchor" href="#🐞debug记录" aria-hidden="true">#</a> 🐞debug记录</h2><h3 id="vscode远程连接" tabindex="-1"><a class="header-anchor" href="#vscode远程连接" aria-hidden="true">#</a> vscode远程连接</h3><p>安装插件Remote - SSH</p><p>登录时注意格式为 username@ip，直接用ip无法进入</p><p>点击vscode中的“打开文件夹”，即可开始编辑代码</p><h3 id="地图无法显示" tabindex="-1"><a class="header-anchor" href="#地图无法显示" aria-hidden="true">#</a> 地图无法显示</h3><p>地图数据是外网的，客户端需要更改ip地址</p><h3 id="地图显示不覆盖页面" tabindex="-1"><a class="header-anchor" href="#地图显示不覆盖页面" aria-hidden="true">#</a> 地图显示不覆盖页面</h3><p>css修改尺寸为100vh</p><h3 id="已开放端口8089-但加载不成功" tabindex="-1"><a class="header-anchor" href="#已开放端口8089-但加载不成功" aria-hidden="true">#</a> 已开放端口8089，但加载不成功</h3><p>flask对应py文件未运行，使用screen后台运行即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">screen</span> <span class="token parameter variable">-S</span> screen_name
python app.py
Ctrl-A Ctrl-D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>补充：screen可能发生运行时间不长的情况，改用docker</p>`,19),M={href:"https://www.runoob.com/docker/docker-container-usage.html",title:"Docker 容器使用 | 菜鸟教程 (runoob.com)",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/weixin_37773766/article/details/80702926",title:"(1条消息) docker基础知识之挂载本地目录_docker 挂载目录__世纪末的魔术师_的博客-CSDN博客",target:"_blank",rel:"noopener noreferrer"},O=p(`<p>docker可以支持把一个宿主机上的目录挂载到镜像里。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">-v</span> /home/dock/Downloads:/usr/Downloads ubuntu64 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过-v参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径。</p><h3 id="获取数据的api-data不成功-500报错" tabindex="-1"><a class="header-anchor" href="#获取数据的api-data不成功-500报错" aria-hidden="true">#</a> 获取数据的api data不成功，500报错</h3><p>查看报错，大意为找不到表road</p><p>查看mysql后发现是mqsql指令中表的名字错误，改为road_record</p><h3 id="flask获取的mysql数据库数据不是最新的" tabindex="-1"><a class="header-anchor" href="#flask获取的mysql数据库数据不是最新的" aria-hidden="true">#</a> Flask获取的mysql数据库数据不是最新的</h3>`,7),D={href:"https://flask.net.cn/deploying/wsgi-standalone.html",title:"独立 WSGI 容器_Flask中文网",target:"_blank",rel:"noopener noreferrer"},U=p(`<li><p>在你的代码中，<code>query_db</code> 函数执行查询数据库的操作。然而，在每个路由处理函数中，你调用了 <code>query_db</code> 函数来获取数据，但是没有显式地提交数据库的更改。</p><p>如果你在查询之后做出了更改（例如插入、更新或删除操作），那么应该调用 <code>db.commit()</code> 来提交更改，以确保下一次查询获取到的是最新的数据。</p><p>修改你的代码，在每个路由处理函数中，在获取数据之后添加 <code>db.commit()</code>，如下所示：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&lt;address&gt;/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 查询数据</span>
    results <span class="token operator">=</span> query_db<span class="token punctuation">(</span><span class="token string">&#39;SELECT * FROM road_record WHERE address = &quot;&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot; order by Time_id desc limit 10;&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># ... 其他处理逻辑</span>

    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 提交更改</span>

    <span class="token comment"># 渲染模板以及返回结果</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取数据改为异步方法，在plot.js中手动按秒持续进行更新</p></li><li><p>运行app.py文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python app.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),F=n("h3",{id:"物联网平台iotda",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#物联网平台iotda","aria-hidden":"true"},"#"),s(" 物联网平台IoTDA")],-1),j=n("p",null,"将服务器数据传到物联网平台",-1),H={href:"https://www.bilibili.com/video/BV1Md4y1v7m5/?share_source=copy_web&vd_source=ae116ba1453d272bfc648f15df41bed0",title:"https://www.bilibili.com/video/BV1Md4y1v7m5/?share_source=copy_web&vd_source=ae116ba1453d272bfc648f15df41bed0",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://support.huaweicloud.com/devg-iothub/iot_02_2133.html",title:"Node.js Demo使用说明_设备接入 IoTDA_开发指南_设备侧开发_使用MQTT Demo接入_华为云 (huaweicloud.com)",target:"_blank",rel:"noopener noreferrer"},B=p('<h4 id="实现方法" tabindex="-1"><a class="header-anchor" href="#实现方法" aria-hidden="true">#</a> 实现方法</h4><ol><li>物联网平台操作</li></ol><p>先在物联网平台上创建产品，然后定义模型，再添加服务。</p><p>服务下面有属性和命令。属性用于设备侧上传，设置了与数据库一样的信息格式（含state:string）。</p><p><img src="'+t+`" alt=""></p><ol><li>服务器操作</li></ol><p>数据库没找到监控方法，目前使用异步方法每两秒查询一次，如果信息改变就用官方的mqtt nodejs代码将最新信息上报物联网平台。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connect&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;connect to mqtt server success, deviceId is &quot;</span> <span class="token operator">+</span> deviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    client<span class="token punctuation">.</span>options<span class="token punctuation">.</span>reconnectPeriod <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    retryTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">//订阅Topic</span>
    <span class="token function">subScribeTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token keyword">var</span> last_result<span class="token punctuation">;</span>
<span class="token keyword">var</span> new_result<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">queryAndReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> connection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">//发送最新的记录</span>
        <span class="token keyword">var</span> sql <span class="token operator">=</span> <span class="token string">&#39;SELECT * FROM road_record order by  time desc limit 1&#39;</span><span class="token punctuation">;</span>
        connection<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[SELECT ERROR] - &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          
            new_result <span class="token operator">=</span> result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>new_result<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>last_result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result change!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> propertiesReportJson <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;services&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string-property property">&#39;properties&#39;</span><span class="token operator">:</span>new_result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-property property">&#39;service_id&#39;</span><span class="token operator">:</span><span class="token string">&#39;servertest&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;event_time&#39;</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> propertiesReport <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>propertiesReportJson<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">publishMessage</span><span class="token punctuation">(</span>propertiesReport<span class="token punctuation">)</span><span class="token punctuation">;</span>
                
                connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                last_result <span class="token operator">=</span> new_result<span class="token punctuation">;</span>

                <span class="token comment">//查询成功后，在这里设置一个timeout，2秒后再次查询和上报</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span>queryAndReport<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result not change!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//查询结果没有变化，2秒后再次查询和上报</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span>queryAndReport<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// connection.release();</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 第一次查询和上报</span>
<span class="token function">queryAndReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="最终效果" tabindex="-1"><a class="header-anchor" href="#最终效果" aria-hidden="true">#</a> 最终效果</h4><p><img src="`+h+'" alt=""></p><h3 id="mysql数据库建库失败" tabindex="-1"><a class="header-anchor" href="#mysql数据库建库失败" aria-hidden="true">#</a> mysql数据库建库失败</h3>',11),G={href:"https://zhuanlan.zhihu.com/p/610793026",title:"在 Ubuntu 上安装和配置 MySQL 保姆级教程 - 知乎 (zhihu.com)",target:"_blank",rel:"noopener noreferrer"},V=p(`<h4 id="mysql数据库最高权限用户失效" tabindex="-1"><a class="header-anchor" href="#mysql数据库最高权限用户失效" aria-hidden="true">#</a> mysql数据库最高权限用户失效</h4><p>停止已经运行的 MySQL 进程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> mysql stop

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在终端或命令提示符中以 <code>--skip-grant-tables</code> 选项启动 MySQL 服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysqld_safe --skip-grant-tables <span class="token operator">&amp;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>连接到 MySQL 服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> root

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>进入mysql数据库的user数据表，修改root用户的若干权限为Y</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use mysql<span class="token punctuation">;</span>
UPDATE user SET <span class="token assign-left variable">Grant_priv</span><span class="token operator">=</span><span class="token string">&#39;Y&#39;</span>, <span class="token assign-left variable">Super_priv</span><span class="token operator">=</span><span class="token string">&#39;Y&#39;</span> WHERE <span class="token assign-left variable">User</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mysqld-safe-directory-var-run-mysqld-for-unix-socket-file-don-t-exists" tabindex="-1"><a class="header-anchor" href="#mysqld-safe-directory-var-run-mysqld-for-unix-socket-file-don-t-exists" aria-hidden="true">#</a> mysqld_safe Directory &#39;/var/run/mysqld&#39; for UNIX socket file don&#39;t exists.</h4><p>手动创建该目录并赋予适当的权限，然后再次尝试启动 <code>mysqld_safe</code> 进程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/run/mysqld
<span class="token function">sudo</span> <span class="token function">chown</span> mysql:mysql /var/run/mysqld

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，重新运行以下命令来启动 <code>mysqld_safe</code> 进程：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysqld_safe --skip-grant-tables <span class="token operator">&amp;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>显示如下则启动成功</p><p><img src="`+g+'" alt=""></p><h4 id="停止mysql服务后重启-仍mysqld-safe-a-mysqld-process-already-exists" tabindex="-1"><a class="header-anchor" href="#停止mysql服务后重启-仍mysqld-safe-a-mysqld-process-already-exists" aria-hidden="true">#</a> 停止mysql服务后重启，仍mysqld_safe A mysqld process already exists</h4><p>查询mysql相关进程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> mysql\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>停止进程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">37260</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="所需数据库及表" tabindex="-1"><a class="header-anchor" href="#所需数据库及表" aria-hidden="true">#</a> 所需数据库及表</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>light<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token comment">// 未使用</span>\n    <span class="token identifier"><span class="token punctuation">`</span>light_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>state<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>second<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>light_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n \n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>device_record<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>Time_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>Time<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;times&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;place &#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>fig_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;figure name&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>state<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Time_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n \n <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>road_record<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>Time_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>Time<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;times&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;place &#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>fig_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">COMMENT</span> <span class="token string">&#39;figure name&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>state<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Time_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n <span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n \n <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>light_color<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>color_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>color<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>color_id<span class="token punctuation">`</span></span> <span class="token punctuation">)</span>\n <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行稳定性问题" tabindex="-1"><a class="header-anchor" href="#运行稳定性问题" aria-hidden="true">#</a> 运行稳定性问题</h3><p>使用screen在后台运行，过一段时间运行会报错。原因是没有监测数据库是否连接、重连数据库，数据库操作多了就会失去连接，修改app.py中的db部分内容即可。</p><h2 id="👾未解决问题" tabindex="-1"><a class="header-anchor" href="#👾未解决问题" aria-hidden="true">#</a> 👾未解决问题</h2><h3 id="地图图标实时改变-红绿灯" tabindex="-1"><a class="header-anchor" href="#地图图标实时改变-红绿灯" aria-hidden="true">#</a> 地图图标实时改变（红绿灯）</h3><h2 id="🧙🏻‍♀️可补充功能" tabindex="-1"><a class="header-anchor" href="#🧙🏻‍♀️可补充功能" aria-hidden="true">#</a> 🧙🏻‍♀️可补充功能</h2><h3 id="注册" tabindex="-1"><a class="header-anchor" href="#注册" aria-hidden="true">#</a> 注册</h3><p>添加用户表格和注册页面</p><p>注意加密，密码检验放置到后端。</p>',31);function P(Q,X){const a=c("ExternalLinkIcon");return l(),i("div",null,[f,n("p",null,[n("a",_,[s("图解Astro大屏应用_Astro轻应用 AstroZero_用户指南（Astro大屏应用）_华为云 (huaweicloud.com)"),e(a)])]),w,n("p",null,[n("a",T,[s("(4条消息) MySQL日期时间操作函数（挺全的）_mysql日期函数_HaleyTiger的博客-CSDN博客"),e(a)])]),E,n("p",null,[n("a",q,[s(" Interactive Choropleth Map - Leaflet - a JavaScript library for interactive maps https://leafletjs.com/examples/choropleth/"),e(a)])]),N,n("p",null,[s('app.py为flask实现文件，将该文件下实现的方法渲染至指定端口。（此时页面路径为"'),n("a",R,[s("http://123.60.185.153:8089"),e(a)]),s('"）')]),x,n("p",null,[s('在此基础（已有端口）上添加路径。将数据库数据渲染至指定的页面中，在页面中跳转路径即可（下方路径为"'),n("a",S,[s("http://123.60.185.153:8089/"),e(a)]),s('<address>/"）')]),A,n("p",null,[s('下方路径为"'),n("a",I,[s("http://123.60.185.153:8089/"),e(a)]),s('<address>/data/"')]),L,n("p",null,[n("a",M,[s("Docker 容器使用 | 菜鸟教程 (runoob.com)"),e(a)])]),n("p",null,[n("a",C,[s("(1条消息) docker基础知识之挂载本地目录_docker 挂载目录__世纪末的魔术师_的博客-CSDN博客"),e(a)])]),O,n("ol",null,[n("li",null,[n("p",null,[s("flask部署教程 （本项目用了Gevent） "),n("a",D,[s("独立 WSGI 容器_Flask中文网"),e(a)])])]),U]),F,j,n("p",null,[s("【华为云物联网开发（一）设备上云】 "),n("a",H,[s("https://www.bilibili.com/video/BV1Md4y1v7m5/?share_source=copy_web&vd_source=ae116ba1453d272bfc648f15df41bed0"),e(a)])]),n("p",null,[n("a",Y,[s("Node.js Demo使用说明_设备接入 IoTDA_开发指南_设备侧开发_使用MQTT Demo接入_华为云 (huaweicloud.com)"),e(a)])]),B,n("p",null,[n("a",G,[s("在 Ubuntu 上安装和配置 MySQL 保姆级教程 - 知乎 (zhihu.com)"),e(a)])]),V])}const W=o(y,[["render",P],["__file","electromobile.html.vue"]]);export{W as default};
